"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[3471],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>g});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},s=Object.keys(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,s=e.originalType,l=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),u=c(n),m=r,g=u["".concat(l,".").concat(m)]||u[m]||d[m]||s;return n?a.createElement(g,i(i({ref:t},p),{},{components:n})):a.createElement(g,i({ref:t},p))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=n.length,i=new Array(s);i[0]=m;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o[u]="string"==typeof e?e:r,i[1]=o;for(var c=2;c<s;c++)i[c]=n[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},783:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>m,frontMatter:()=>i,metadata:()=>l,toc:()=>p});n(7294);var a=n(3905);function r(){return r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},r.apply(this,arguments)}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},s=Object.keys(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}const i={title:"\u521d\u8bc6 Raspberry Pi OS Lite",author:"Uncle Dragon",date:new Date("2021-07-13T00:00:00.000Z"),category:"linux",tag:["containerd","mqtt"]},o=void 0,l={unversionedId:"linux/Raspberry Pi OS Lite",id:"linux/Raspberry Pi OS Lite",title:"\u521d\u8bc6 Raspberry Pi OS Lite",description:"Raspberry Pi OS Lite  \u57fa\u4e8e Debian 10 32 \u4f4d\u7248\u672c\u7684\u7cbe\u7b80\u7248\uff0c\u56e0\u6b64debian \u4e0b\u9ed8\u8ba4\u4f7f\u7528\u7684\u547d\u4ee4\uff0c\u7edd\u5927\u90e8\u5206\u5b83\u90fd\u53ef\u4ee5\u4f7f\u7528\u3002",source:"@site/docs/linux/Raspberry Pi OS Lite.md",sourceDirName:"linux",slug:"/linux/Raspberry Pi OS Lite",permalink:"/docs/linux/Raspberry Pi OS Lite",draft:!1,tags:[],version:"current",lastUpdatedAt:1675912862,formattedLastUpdatedAt:"2023\u5e742\u67089\u65e5",frontMatter:{title:"\u521d\u8bc6 Raspberry Pi OS Lite",author:"Uncle Dragon",date:"2021-07-13T00:00:00.000Z",category:"linux",tag:["containerd","mqtt"]},sidebar:"linux",previous:{title:"Linux-faq",permalink:"/docs/linux/Linux-faq"},next:{title:"after-system-install",permalink:"/docs/linux/after-system-install"}},c={},p=[],u={toc:p},d="wrapper";function m(e){var{components:t}=e,n=s(e,["components"]);return(0,a.kt)(d,r({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Raspberry Pi OS Lite  \u57fa\u4e8e Debian 10 32 \u4f4d\u7248\u672c\u7684\u7cbe\u7b80\u7248\uff0c\u56e0\u6b64debian \u4e0b\u9ed8\u8ba4\u4f7f\u7528\u7684\u547d\u4ee4\uff0c\u7edd\u5927\u90e8\u5206\u5b83\u90fd\u53ef\u4ee5\u4f7f\u7528\u3002"),(0,a.kt)("h1",r({},{id:"set-up--raspberry"}),"set up  Raspberry"),(0,a.kt)("p",null," \u8bbe\u7f6e\u9759\u6001IP"),(0,a.kt)("pre",null,(0,a.kt)("code",r({parentName:"pre"},{className:"language-shell"}),"$ vi /etc/dhcpcd.conf\n \ninterface eth0\nstatic ip_address=10.8.30.100/24\nstatic routes=10.8.30.1\nstatic domain_name_servers=114.114.114.114 223.5.5.5 223.6.6.6\n \n")),(0,a.kt)("p",null,"ssh\n\u9ed8\u8ba4\u5df2\u7ecf\u5b89\u88c5ssh\u670d\u52a1\n\u8bbe\u7f6e\u5f00\u673a\u81ea\u542f"),(0,a.kt)("pre",null,(0,a.kt)("code",r({parentName:"pre"},{className:"language-shell"}),"$ systemctl enable ssh\nSynchronizing state of ssh.service with SysV service script with /lib/systemd/systemd-sysv-install.\nExecuting: /lib/systemd/systemd-sysv-install enable ssh\nCreated symlink /etc/systemd/system/sshd.service \u2192 /lib/systemd/system/ssh.service.\nCreated symlink /etc/systemd/system/multi-user.target.wants/ssh.service \u2192 /lib/systemd/system/ssh.service.\n \n")),(0,a.kt)("p",null,"\u5b89\u88c5 vim"),(0,a.kt)("pre",null,(0,a.kt)("code",r({parentName:"pre"},{className:"language-shell"}),"$ apt-get update && apt-get install vim\n\n")),(0,a.kt)("p",null,"\u65f6\u533a\u8bbe\u7f6e"),(0,a.kt)("pre",null,(0,a.kt)("code",r({parentName:"pre"},{className:"language-shell"}),"$ apt-get install ntpdate\n\n$ tzselect\nPlease identify a location so that time zone rules can be set correctly.\nPlease select a continent, ocean, \"coord\", or \"TZ\".\n1) Africa                                 5) Atlantic Ocean                            9) Pacific Ocean\n2) Americas                               6) Australia                            10) coord - I want to use geographical coordinates.\n3) Antarctica                                 7) Europe                               11) TZ - I want to specify the time zone using the Posix TZ format.\n4) Asia                                   8) Indian Ocean\n#? 4\nPlease select a country whose clocks agree with yours.\n1) Afghanistan         7) Brunei            13) Hong Kong         19) Japan         25) Kyrgyzstan        31) Myanmar (Burma)       37) Qatar             43) Taiwan        49) Vietnam\n2) Armenia         8) Cambodia          14) India             20) Jordan        26) Laos          32) Nepal         38) Russia            44) Tajikistan        50) Yemen\n3) Azerbaijan          9) China         15) Indonesia         21) Kazakhstan        27) Lebanon       33) Oman          39) Saudi Arabia          45) Thailand\n4) Bahrain        10) Cyprus            16) Iran              22) Korea (North)     28) Macau         34) Pakistan          40) Singapore         46) Turkmenistan\n5) Bangladesh         11) East Timor        17) Iraq              23) Korea (South)     29) Malaysia          35) Palestine         41) Sri Lanka         47) United Arab Emirates\n6) Bhutan         12) Georgia           18) Israel            24) Kuwait        30) Mongolia          36) Philippines       42) Syria             48) Uzbekistan\n#? 9\nPlease select one of the following time zone regions.\n1) Beijing Time\n2) Xinjiang Time\n#? 1\n\nThe following information has been given:\n\n    China\n    Beijing Time\n\nTherefore TZ='Asia/Shanghai' will be used.\nSelected time is now:   Mon Jul 12 17:33:01 CST 2021.\nUniversal Time is now:  Mon Jul 12 09:33:01 UTC 2021.\nIs the above information OK?\n1) Yes\n2) No\n#? 1\n\nYou can make this change permanent for yourself by appending the line\n    TZ='Asia/Shanghai'; export TZ\nto the file '.profile' in your home directory; then log out and log in again.\n\nHere is that TZ value again, this time on standard output so that you\ncan use the /usr/bin/tzselect command in shell scripts:\nAsia/Shanghai\n\n$ vi /etc/profile\n\nTZ='Asia/Shanghai'; export TZ\n\n$ source /etc/profile\n\n$ date\nMon 12 Jul 17:36:07 CST 2021\n")),(0,a.kt)("h1",r({},{id:"install-containerd"}),"install containerd"),(0,a.kt)("pre",null,(0,a.kt)("code",r({parentName:"pre"},{className:"language-shell"}),"$ sudo apt-get update\n    \n$ sudo apt-get install \\\n        apt-transport-https \\\n        ca-certificates \\\n        curl \\\n        gnupg \\\n        lsb-release\n")),(0,a.kt)("pre",null,(0,a.kt)("code",r({parentName:"pre"},{className:"language-shell"}),"$ curl -fsSL https://download.docker.com/linux/debian/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg\n")),(0,a.kt)("pre",null,(0,a.kt)("code",r({parentName:"pre"},{className:"language-shell"}),'$ echo \\\n  "deb [arch=armhf signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/debian \\\n  $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null\n')),(0,a.kt)("pre",null,(0,a.kt)("code",r({parentName:"pre"},{className:"language-shell"}),"$ sudo apt-get update\n$ sudo apt-get install containerd.io\n")),(0,a.kt)("h1",r({},{id:"install-mqtt"}),"install mqtt"),(0,a.kt)("pre",null,(0,a.kt)("code",r({parentName:"pre"},{className:"language-shell"}),"\n\nwget http://repo.mosquitto.org/debian/mosquitto-repo.gpg.key\n\nsudo apt-key add mosquitto-repo.gpg.key\n\n# sudo wget -P /etc/apt/sources.list.d/ http://repo.mosquitto.org/debian/mosquitto-jessie.list\n# sudo wget -P /etc/apt/sources.list.d/ http://repo.mosquitto.org/debian/mosquitto-stretch.list\nsudo wget -P /etc/apt/sources.list.d/ http://repo.mosquitto.org/debian/mosquitto-buster.list \n\napt-get update\n\napt-get install mosquitto\n\n\n")))}m.isMDXComponent=!0}}]);