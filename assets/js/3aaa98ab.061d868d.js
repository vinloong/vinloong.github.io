"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[6269],{3905:(e,r,t)=>{t.d(r,{Zo:()=>p,kt:()=>g});var a=t(7294);function n(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function o(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);r&&(a=a.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,a)}return t}function l(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?o(Object(t),!0).forEach((function(r){n(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function c(e,r){if(null==e)return{};var t,a,n=function(e,r){if(null==e)return{};var t,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],r.indexOf(t)>=0||(n[t]=e[t]);return n}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var s=a.createContext({}),i=function(e){var r=a.useContext(s),t=r;return e&&(t="function"==typeof e?e(r):l(l({},r),e)),t},p=function(e){var r=i(e.components);return a.createElement(s.Provider,{value:r},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var r=e.children;return a.createElement(a.Fragment,{},r)}},m=a.forwardRef((function(e,r){var t=e.components,n=e.mdxType,o=e.originalType,s=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),u=i(t),m=n,g=u["".concat(s,".").concat(m)]||u[m]||d[m]||o;return t?a.createElement(g,l(l({ref:r},p),{},{components:t})):a.createElement(g,l({ref:r},p))}));function g(e,r){var t=arguments,n=r&&r.mdxType;if("string"==typeof e||n){var o=t.length,l=new Array(o);l[0]=m;var c={};for(var s in r)hasOwnProperty.call(r,s)&&(c[s]=r[s]);c.originalType=e,c[u]="string"==typeof e?e:n,l[1]=c;for(var i=2;i<o;i++)l[i]=t[i];return a.createElement.apply(null,l)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},8900:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>i,contentTitle:()=>c,default:()=>m,frontMatter:()=>l,metadata:()=>s,toc:()=>p});t(7294);var a=t(3905);function n(){return n=Object.assign||function(e){for(var r=1;r<arguments.length;r++){var t=arguments[r];for(var a in t)Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a])}return e},n.apply(this,arguments)}function o(e,r){if(null==e)return{};var t,a,n=function(e,r){if(null==e)return{};var t,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],r.indexOf(t)>=0||(n[t]=e[t]);return n}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}const l={},c=void 0,s={unversionedId:"kubernetes/practice/argo",id:"kubernetes/practice/argo",title:"argo",description:"install",source:"@site/docs/kubernetes/practice/argo.md",sourceDirName:"kubernetes/practice",slug:"/kubernetes/practice/argo",permalink:"/docs/kubernetes/practice/argo",draft:!1,tags:[],version:"current",lastUpdatedAt:1675912862,formattedLastUpdatedAt:"2023\u5e742\u67089\u65e5",frontMatter:{},sidebar:"kubernetes",previous:{title:"pod \u751f\u547d\u5468\u671f",permalink:"/docs/kubernetes/pod"},next:{title:"\u5229\u7528\u963f\u91cc\u4e91\u6784\u5efa\u81ea\u5df1\u7684\u955c\u50cf",permalink:"/docs/kubernetes/practice/build-image-in-aliyun"}},i={},p=[{value:"install",id:"install",level:2},{value:"add user",id:"add-user",level:2},{value:"Update the ConfigMap",id:"update-the-configmap",level:3},{value:"Update the Users Password",id:"update-the-users-password",level:3},{value:"Update the Role Base Access Control (RBAC) for Local User",id:"update-the-role-base-access-control-rbac-for-local-user",level:3},{value:"Disabled Admin Account",id:"disabled-admin-account",level:3}],u={toc:p},d="wrapper";function m(e){var{components:r}=e,t=o(e,["components"]);return(0,a.kt)(d,n({},u,t,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("h2",n({},{id:"install"}),"install"),(0,a.kt)("pre",null,(0,a.kt)("code",n({parentName:"pre"},{}),"kubectl create ns argocd\nkubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml\n")),(0,a.kt)("h2",n({},{id:"add-user"}),"add user"),(0,a.kt)("pre",null,(0,a.kt)("code",n({parentName:"pre"},{className:"language-shell"}),"argocd login argocd-server.argocd --username admin  --password Abcd_1234\n\nargocd account list\n\n")),(0,a.kt)("h3",n({},{id:"update-the-configmap"}),"Update the ConfigMap"),(0,a.kt)("pre",null,(0,a.kt)("code",n({parentName:"pre"},{className:"language-bash"}),"kubectl edit configmap argocd-cm -n argocd\n")),(0,a.kt)("pre",null,(0,a.kt)("code",n({parentName:"pre"},{className:"language-yaml"}),"apiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: argocd-cm\n  namespace: argocd\n  labels:\n    app.kubernetes.io/name: argocd-cm\n    app.kubernetes.io/part-of: argocd\ndata:\n  accounts.admin: apiKey\n  accounts.liyu: apiKey,login\n  accounts.<new-username>: apiKey, login\n")),(0,a.kt)("h3",n({},{id:"update-the-users-password"}),"Update the Users Password"),(0,a.kt)("pre",null,(0,a.kt)("code",n({parentName:"pre"},{}),"argocd account update-password --account liyu --new-password abcd1234\n")),(0,a.kt)("h3",n({},{id:"update-the-role-base-access-control-rbac-for-local-user"}),"Update the Role Base Access Control (RBAC) for Local User"),(0,a.kt)("pre",null,(0,a.kt)("code",n({parentName:"pre"},{className:"language-shell"}),"kubectl get configmap argocd-rbac-cm\n")),(0,a.kt)("pre",null,(0,a.kt)("code",n({parentName:"pre"},{className:"language-yaml"}),"data:\n  policy.csv: |\n    p, role:org-admin, applications, *, */*, allow\n    p, role:org-admin, clusters, get, *, allow\n    p, role:org-admin, repositories, get, *, allow\n    p, role:org-admin, repositories, create, *, allow\n    p, role:org-admin, repositories, update, *, allow\n    p, role:org-admin, repositories, delete, *, allow\n    g, <new-user>, role:org-admin\n  policy.default: role:''\n")),(0,a.kt)("pre",null,(0,a.kt)("code",n({parentName:"pre"},{className:"language-yaml"}),"p, role:<assigned-role>, gpgkeys, get, *, allow\n")),(0,a.kt)("h3",n({},{id:"disabled-admin-account"}),"Disabled Admin Account"),(0,a.kt)("pre",null,(0,a.kt)("code",n({parentName:"pre"},{className:"language-yaml"}),'data:\n  admin.enabled: "false"\n')))}m.isMDXComponent=!0}}]);