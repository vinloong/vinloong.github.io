"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[3820],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>k});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var i=r.createContext({}),c=function(e){var n=r.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},u=function(e){var n=c(e.components);return r.createElement(i.Provider,{value:n},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=c(t),d=a,k=p["".concat(i,".").concat(d)]||p[d]||m[d]||o;return t?r.createElement(k,s(s({ref:n},u),{},{components:t})):r.createElement(k,s({ref:n},u))}));function k(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,s=new Array(o);s[0]=d;var l={};for(var i in n)hasOwnProperty.call(n,i)&&(l[i]=n[i]);l.originalType=e,l[p]="string"==typeof e?e:a,s[1]=l;for(var c=2;c<o;c++)s[c]=t[c];return r.createElement.apply(null,s)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},9933:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>d,frontMatter:()=>s,metadata:()=>i,toc:()=>u});t(7294);var r=t(3905);function a(){return a=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e},a.apply(this,arguments)}function o(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}const s={title:"\u5355\u673a\u73af\u5883\u5b89\u88c5 k8s (\u57fa\u4e8e cri-o)",date:new Date("2021-06-28T00:00:00.000Z"),category:"k8s",tag:["k8s"]},l=void 0,i={unversionedId:"kubernetes/k8s-install",id:"kubernetes/k8s-install",title:"\u5355\u673a\u73af\u5883\u5b89\u88c5 k8s (\u57fa\u4e8e cri-o)",description:"\u524d\u9762\u6b65\u9aa4\u4e0e \u4e4b\u524d k8s  \u642d\u5efa\u65e0\u5dee\u522b\u3002",source:"@site/docs/kubernetes/k8s-install.md",sourceDirName:"kubernetes",slug:"/kubernetes/k8s-install",permalink:"/docs/kubernetes/k8s-install",draft:!1,tags:[],version:"current",lastUpdatedAt:1675912862,formattedLastUpdatedAt:"2023\u5e742\u67089\u65e5",frontMatter:{title:"\u5355\u673a\u73af\u5883\u5b89\u88c5 k8s (\u57fa\u4e8e cri-o)",date:"2021-06-28T00:00:00.000Z",category:"k8s",tag:["k8s"]},sidebar:"kubernetes",previous:{title:"\u5207\u6362k8s\u5bb9\u5668\u8fd0\u884c\u65f6\uff1a\u4ecedocker\u5230containerd",permalink:"/docs/kubernetes/k8s-docker-2-containerd"},next:{title:"k8s-job-start",permalink:"/docs/kubernetes/k8s-job-start"}},c={},u=[],p={toc:u},m="wrapper";function d(e){var{components:n}=e,t=o(e,["components"]);return(0,r.kt)(m,a({},p,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"\u524d\u9762\u6b65\u9aa4\u4e0e \u4e4b\u524d k8s  \u642d\u5efa\u65e0\u5dee\u522b\u3002\n\u53ea\u662f\u8fd9\u6b21\u662f\u5bb9\u5668\u8fd0\u884c\u65f6\u662f\u4f7f\u7528\u7684 ",(0,r.kt)("strong",{parentName:"p"},"CRI-O")),(0,r.kt)("p",null,"\u9ed8\u8ba4\u5df2\u7ecf",(0,r.kt)("a",a({parentName:"p"},{href:"/docs/kubernetes/containers/cri-o-start"}),"\u5b89\u88c5\u5bb9\u5668\u8fd0\u884c\u65f6")),(0,r.kt)("pre",null,(0,r.kt)("code",a({parentName:"pre"},{className:"language-shell"}),'\n# \u817e\u8baf\u4e91 docker hub \u955c\u50cf\n# export REGISTRY_MIRROR="https://mirror.ccs.tencentyun.com"\n# DaoCloud \u955c\u50cf\n# export REGISTRY_MIRROR="http://f1361db2.m.daocloud.io"\n# \u963f\u91cc\u4e91 docker hub \u955c\u50cf\nexport REGISTRY_MIRROR=https://registry.cn-hangzhou.aliyuncs.com\n\nexport MASTER_IP=10.8.30.7\n# \u66ff\u6362 apiserver.demo \u4e3a \u60a8\u60f3\u8981\u7684 dnsName\nexport APISERVER_NAME=k8s-master\n# Kubernetes \u5bb9\u5668\u7ec4\u6240\u5728\u7684\u7f51\u6bb5\uff0c\u8be5\u7f51\u6bb5\u5b89\u88c5\u5b8c\u6210\u540e\uff0c\u7531 kubernetes \u521b\u5efa\uff0c\u4e8b\u5148\u5e76\u4e0d\u5b58\u5728\u4e8e\u60a8\u7684\u7269\u7406\u7f51\u7edc\u4e2d\nexport POD_SUBNET=10.244.0.0/16\necho "${MASTER_IP}    ${APISERVER_NAME}" >> /etc/hosts\n\n')),(0,r.kt)("h1",a({},{id:"\u521d\u59cb\u5316-master-\u8282\u70b9"}),"\u521d\u59cb\u5316 master \u8282\u70b9"),(0,r.kt)("pre",null,(0,r.kt)("code",a({parentName:"pre"},{className:"language-shell"}),'apt-get update\napt-get install -y apt-transport-https ca-certificates curl\n\n\ncurl -fsSLo /usr/share/keyrings/kubernetes-archive-keyring.gpg http://mirrors.aliyun.com/kubernetes/apt/doc/apt-key.gpg\necho "deb [signed-by=/usr/share/keyrings/kubernetes-archive-keyring.gpg] http://mirrors.aliyun.com/kubernetes/apt/ kubernetes-xenial main" | sudo tee /etc/apt/sources.list.d/kubernetes.list\n\n\napt-get update\napt-get install -y kubelet kubeadm kubectl\n\napt-mark hold kubelet kubeadm kubectl\n\n\n# \u5b89\u88c5 cri-o \u5de5\u5177 crictl \n\nVERSION="v1.21.0"\nwget https://github.com/kubernetes-sigs/cri-tools/releases/download/$VERSION/crictl-$VERSION-linux-amd64.tar.gz\ntar zxvf crictl-$VERSION-linux-amd64.tar.gz -C /usr/local/bin\nrm -f crictl-$VERSION-linux-amd64.tar.gz\n\n\n')),(0,r.kt)("p",null,"\u53e6\u5916\u6211\u8fd9\u91cc\u8fd8\u6709\u4e00\u6b65\u66ff\u6362 kubeadm \u7684\u64cd\u4f5c, kubeadm \u662f \u6211\u4fee\u6539\u8fc7 \u8bc1\u4e66\u6709\u6548\u671f\u540e\uff0c\u91cd\u65b0\u7f16\u8bd1\u7684\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",a({parentName:"pre"},{}),"tar zxvf kubernetes-1.21.2.tar.gz \ncp kubernetes-1.21.2/kubeadm /usr/bin/kubeadm\n")),(0,r.kt)("p",null,"\u8f93\u51fakubeadm \u521d\u59cb\u5316\u7684\u914d\u7f6e\u6587\u4ef6"),(0,r.kt)("pre",null,(0,r.kt)("code",a({parentName:"pre"},{className:"language-shell"}),"kubeadm config print init-defaults --kubeconfig ClusterConfiguration > kubeadm.yml\n")),(0,r.kt)("p",null,"kubeadm-config.yaml"),(0,r.kt)("pre",null,(0,r.kt)("code",a({parentName:"pre"},{className:"language-yaml"}),"---\napiVersion: kubeadm.k8s.io/v1beta2\nbootstrapTokens:\n- groups:\n  - system:bootstrappers:kubeadm:default-node-token\n  token: abcdef.0123456789abcdef\n  ttl: 24h0m0s\n  usages:\n  - signing\n  - authentication\nkind: InitConfiguration\nlocalAPIEndpoint:\n  # \u6539\u4e3a\u5f53\u524d\u8282\u70b9ip\u6216\u8005hostname\n  advertiseAddress: 10.8.30.7\n  bindPort: 6443\nnodeRegistration:\n  # \u6539\u4e3a\u5f53\u524d cri \u8fd0\u884c\u65f6\n  criSocket: /var/run/crio/crio.sock\n  name: test\n  taints: null\n---\napiServer:\n  timeoutForControlPlane: 4m0s\napiVersion: kubeadm.k8s.io/v1beta2\ncertificatesDir: /etc/kubernetes/pki\nclusterName: kubernetes\ncontrollerManager: {}\ndns:\n  # type: CoreDNS \u5b57\u6bb5\u5728 1.22 v1beta3\u4e2d\u79fb\u9664\uff0c\u56e0\u4e3a coredns \u662fk8s kubeadm \u552f\u4e00\u652f\u6301\u7684 dns \u7c7b\u578b\n  # \u6539\u4e3a\u534e\u4e3a\u4e91\u7684\u955c\u50cf\u5730\u5740\n  imageRepository: swr.cn-east-2.myhuaweicloud.com/coredns\n  imageTag: 1.8.0\netcd:\n  local:\n    dataDir: /var/lib/etcd\n# \u6539\u4e3a \u963f\u91cc\u4e91 k8s \u4ed3\u5e93 \nimageRepository: registry.aliyuncs.com/google_containers\nkind: ClusterConfiguration\nkubernetesVersion: 1.21.2\nnetworking:\n  dnsDomain: cluster.local\n  # \u670d\u52a1\u5b50\u7f51\n  serviceSubnet: 10.96.0.0/12\n  # pod \u5b50\u7f51\n  podSubnet: 10.244.0.0/16\nscheduler: {}\n---\napiVersion: kubelet.config.k8s.io/v1beta1\nkind: KubeletConfiguration\n# \u8bbe\u7f6ecgroup \u9a71\u52a8\ncgroupDriver: systemd\n")),(0,r.kt)("pre",null,(0,r.kt)("code",a({parentName:"pre"},{className:"language-shell"}),"# \u62c9\u53d6 \u6240\u9700\u7684\u955c\u50cf\nkubeadm config images pull --config=kubeadm-config.yaml --v=5\n\n# \u521d\u59cb\u5316 master\nkubeadm init --config=kubeadm-config.yaml --upload-certs --v=5\n\n# \u6216\u8005\u4f7f\u7528\u547d\u4ee4\u521d\u59cb\u5316\nkubeadm init --apiserver-advertise-address=10.8.30.7 --pod-network-cidr=10.244.0.0/16 --service-cidr=10.96.0.0/12 --image-repository=registry.aliyuncs.com/google_containers --kubernetes-version=v1.12.2 \n\n")),(0,r.kt)("p",null,"\u521d\u59cb\u5316\u5b8c\u6210\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",a({parentName:"pre"},{className:"language-none"}),'Your Kubernetes control-plane has initialized successfully!\n\nTo start using your cluster, you need to run the following as a regular user:\n\n  mkdir -p $HOME/.kube\n  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config\n  sudo chown $(id -u):$(id -g) $HOME/.kube/config\n\nYou should now deploy a Pod network to the cluster.\nRun "kubectl apply -f [podnetwork].yaml" with one of the options listed at:\n  /docs/concepts/cluster-administration/addons/\n\nYou can now join any number of machines by running the following on each node\nas root:\n\n  kubeadm join <control-plane-host>:<control-plane-port> --token <token> --discovery-token-ca-cert-hash sha256:<hash>\n')),(0,r.kt)("p",null,"\u521b\u5efakubectl\u4f7f\u7528\u7684kubeconfig\u6587\u4ef6\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",a({parentName:"pre"},{className:"language-shell"}),"mkdir -p $HOME/.kube\nsudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config\nsudo chown $(id -u):$(id -g) $HOME/.kube/config\n")),(0,r.kt)("p",null,"\u67e5\u770b\u8282\u70b9\u72b6\u6001"),(0,r.kt)("pre",null,(0,r.kt)("code",a({parentName:"pre"},{className:"language-shell"}),"$ kubectl get node\n\nNAME   STATUS   ROLES    AGE     VERSION\ntest   Ready    master   2d21h   v1.21.2\n")),(0,r.kt)("p",null,"\u53ef\u80fd master \u4f1a Not Ready"),(0,r.kt)("pre",null,(0,r.kt)("code",a({parentName:"pre"},{}),"\u4fee\u6539\u914d\u7f6e\u6587\u4ef6\nvim /etc/kubernetes/manifests/kube-controller-manager.yaml\nvim /etc/kubernetes/manifests/kube-scheduler.yaml\n\n# \u628a\u4e0b\u9762\u8fd9\u4e00\u884c\u5185\u5bb9\u6ce8\u91ca\uff0c\u7b49\u5f85\u96c6\u7fa4\u81ea\u52a8\u52a0\u8f7d\u914d\u7f6e\uff0c\u9700\u8981\u65f6\u95f4\n\n#    - --port=0                  ## \u6ce8\u91ca\u6389\u8fd9\u884c\n\n")),(0,r.kt)("p",null,"\u8bbe\u7f6emaster\u53c2\u4e0e\u5de5\u4f5c\u8d1f\u8f7d"),(0,r.kt)("pre",null,(0,r.kt)("code",a({parentName:"pre"},{className:"language-bash"}),"kubectl taint nodes --all node-role.kubernetes.io/master-\nnode/test untainted\n")),(0,r.kt)("h1",a({},{id:"\u5b89\u88c5\u7f51\u7edc\u63d2\u4ef6"}),"\u5b89\u88c5\u7f51\u7edc\u63d2\u4ef6"),(0,r.kt)("pre",null,(0,r.kt)("code",a({parentName:"pre"},{className:"language-shell"}),'kubectl create -f https://docs.projectcalico.org/manifests/tigera-operator.yaml\n\nwget https://docs.projectcalico.org/manifests/custom-resources.yaml\n\nsed -i "s#192.168.0.0/16#${POD_SUBNET}#" custom-resources.yaml\n\nkubectl create -f custom-resources.yaml\n')),(0,r.kt)("h1",a({},{id:"\u90e8\u7f72\u4e00\u4e2a\u5e94\u7528\u6d4b\u8bd5\u662f\u5426\u53ef\u7528"}),"\u90e8\u7f72\u4e00\u4e2a\u5e94\u7528\u6d4b\u8bd5\u662f\u5426\u53ef\u7528"),(0,r.kt)("p",null,"test-nginx.yaml"),(0,r.kt)("pre",null,(0,r.kt)("code",a({parentName:"pre"},{className:"language-yaml"}),'apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: myapp\n  namespace: default\n  labels:\n    app: myapp\nspec:\n  replicas: 1\n  revisionHistoryLimit: 3\n  selector:\n    matchLabels:\n      app: myapp\n  template:\n    metadata:\n      labels:\n        app: myapp\n    spec:\n      containers:\n      - name: myapp\n        image: dr6tjot4.mirror.aliyuncs.com/library/nginx\n        imagePullPolicy: IfNotPresent\n        ports:\n        - containerPort: 80\n        resources:\n          requests:\n            memory: "1000Mi"\n            cpu: "500m"\n          limits:\n            memory: "1000Mi"\n            cpu: "500m"\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: myapp\n  labels:\n    app: myapp\nspec:\n  ports:\n    - port: 80\n      targetPort: 80\n      nodePort: 30001\n  type: NodePort\n  selector:\n    app: myapp\n\n')),(0,r.kt)("p",null,"\u90e8\u7f72 :"),(0,r.kt)("pre",null,(0,r.kt)("code",a({parentName:"pre"},{className:"language-shell"}),"kubectl apply -f test-nginx.yaml\n")),(0,r.kt)("p",null,"\u67e5\u770b pod"),(0,r.kt)("pre",null,(0,r.kt)("code",a({parentName:"pre"},{}),"$ kubectl get po \nNAME                     READY   STATUS    RESTARTS   AGE\nmyapp-79b7f6dd77-4gzkp   1/1     Running   0          47m\n")),(0,r.kt)("p",null,"\u7136\u540e\u8bbf\u95ee\uff1a",(0,r.kt)("a",a({parentName:"p"},{href:"http://10.8.30.7:30001"}),"http://10.8.30.7:30001")," \u770b\u662f\u5426\u53ef\u4ee5\u770b\u5230 nginx \u7684\u6b22\u8fce\u9875\u9762\u3002"))}d.isMDXComponent=!0}}]);