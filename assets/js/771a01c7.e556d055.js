"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[6569],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>I});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),p=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},s=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},u="mdxType",_={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),u=p(n),f=a,I=u["".concat(l,".").concat(f)]||u[f]||_[f]||o;return n?r.createElement(I,c(c({ref:t},s),{},{components:n})):r.createElement(I,c({ref:t},s))}));function I(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,c=new Array(o);c[0]=f;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[u]="string"==typeof e?e:a,c[1]=i;for(var p=2;p<o;p++)c[p]=n[p];return r.createElement.apply(null,c)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},3316:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>f,frontMatter:()=>c,metadata:()=>l,toc:()=>s});n(7294);var r=n(3905);function a(){return a=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},a.apply(this,arguments)}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}const c={},i=void 0,l={unversionedId:"kubernetes/containers/alpine-glibc",id:"kubernetes/containers/alpine-glibc",title:"alpine-glibc",description:"",source:"@site/docs/kubernetes/containers/alpine-glibc.md",sourceDirName:"kubernetes/containers",slug:"/kubernetes/containers/alpine-glibc",permalink:"/docs/kubernetes/containers/alpine-glibc",draft:!1,tags:[],version:"current",lastUpdatedAt:1675912862,formattedLastUpdatedAt:"2023\u5e742\u67089\u65e5",frontMatter:{},sidebar:"kubernetes",previous:{title:"k8s",permalink:"/docs/kubernetes/certification/k8s"},next:{title:"containerd \u5165\u95e8",permalink:"/docs/kubernetes/containers/containered"}},p={},s=[],u={toc:s},_="wrapper";function f(e){var{components:t}=e,n=o(e,["components"]);return(0,r.kt)(_,a({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("pre",null,(0,r.kt)("code",a({parentName:"pre"},{className:"language-dockerfile"}),'FROM alpine:latest\n\nENV LANG=C.UTF-8\n\nRUN sed -i "s@https://dl-cdn.alpinelinux.org/@https://repo.huaweicloud.com/@g" /etc/apk/repositories \\\n    && ALPINE_GLIBC_PKG_BASE_URL="https://github.com/sgerrand/alpine-pkg-glibc/releases/download" \\\n    && ALPINE_GLIBC_PKG_VERSION="2.34-r0" \\\n    && ALPINE_GLIBC_PKG_NAME="glibc-${ALPINE_GLIBC_PKG_VERSION}.apk" \\\n    && ALPINE_GLIBC_PKG_BIN_NAME="glibc-bin-${ALPINE_GLIBC_PKG_VERSION}.apk" \\\n    && ALPINE_GLIBC_PKG_I18N_NAME="glibc-i18n-${ALPINE_GLIBC_PKG_VERSION}.apk" \\    \n    && wget -q -O /etc/apk/keys/sgerrand.rsa.pub https://alpine-pkgs.sgerrand.com/sgerrand.rsa.pub \\\n    && wget "${ALPINE_GLIBC_PKG_BASE_URL}/${ALPINE_GLIBC_PKG_VERSION}/${ALPINE_GLIBC_PKG_NAME}" \\\n            "${ALPINE_GLIBC_PKG_BASE_URL}/${ALPINE_GLIBC_PKG_VERSION}/${ALPINE_GLIBC_PKG_BIN_NAME}" \\\n            "${ALPINE_GLIBC_PKG_BASE_URL}/${ALPINE_GLIBC_PKG_VERSION}/${ALPINE_GLIBC_PKG_I18N_NAME}" \\\n    && apk add --no-cache ${ALPINE_GLIBC_PKG_NAME} ${ALPINE_GLIBC_PKG_BIN_NAME} ${ALPINE_GLIBC_PKG_I18N_NAME} \\\n    && (/usr/glibc-compat/bin/localedef --force --inputfile POSIX --charmap UTF-8 "$LANG" || true) \\\n    && echo "export LANG=$LANG" > /etc/profile.d/locale.sh \\\n    && apk add --no-cache tzdata \\\n    && cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime \\\n    && echo "Asia/Shanghai" > /etc/timezone \\\n    && apk del tzdata \\\n    && rm ${ALPINE_GLIBC_PKG_NAME} ${ALPINE_GLIBC_PKG_BIN_NAME} ${ALPINE_GLIBC_PKG_I18N_NAME} \n')))}f.isMDXComponent=!0}}]);