"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[4897],{3905:(e,n,t)=>{t.d(n,{Zo:()=>m,kt:()=>f});var a=t(7294);function s(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){s(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,a,s=function(e,n){if(null==e)return{};var t,a,s={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(s[t]=e[t]);return s}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(s[t]=e[t])}return s}var l=a.createContext({}),i=function(e){var n=a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},m=function(e){var n=i(e.components);return a.createElement(l.Provider,{value:n},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},d=a.forwardRef((function(e,n){var t=e.components,s=e.mdxType,r=e.originalType,l=e.parentName,m=c(e,["components","mdxType","originalType","parentName"]),u=i(t),d=s,f=u["".concat(l,".").concat(d)]||u[d]||p[d]||r;return t?a.createElement(f,o(o({ref:n},m),{},{components:t})):a.createElement(f,o({ref:n},m))}));function f(e,n){var t=arguments,s=n&&n.mdxType;if("string"==typeof e||s){var r=t.length,o=new Array(r);o[0]=d;var c={};for(var l in n)hasOwnProperty.call(n,l)&&(c[l]=n[l]);c.originalType=e,c[u]="string"==typeof e?e:s,o[1]=c;for(var i=2;i<r;i++)o[i]=t[i];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},7332:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>c,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>m});t(7294);var a=t(3905);function s(){return s=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var a in t)Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a])}return e},s.apply(this,arguments)}function r(e,n){if(null==e)return{};var t,a,s=function(e,n){if(null==e)return{};var t,a,s={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(s[t]=e[t]);return s}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(s[t]=e[t])}return s}const o={},c=void 0,l={unversionedId:"dev&ops/es/eck",id:"dev&ops/es/eck",title:"eck",description:"\u4f7f\u7528docker \u90e8\u7f72\u4e00\u4e2a\u96c6\u7fa4",source:"@site/docs/dev&ops/es/eck.md",sourceDirName:"dev&ops/es",slug:"/dev&ops/es/eck",permalink:"/docs/dev&ops/es/eck",draft:!1,tags:[],version:"current",lastUpdatedAt:1675912862,formattedLastUpdatedAt:"2023\u5e742\u67089\u65e5",frontMatter:{},sidebar:"dev&ops",previous:{title:"CI/CD \u5de5\u5177\u94fe",permalink:"/docs/dev&ops/devops-tools.md"},next:{title:"es-faq",permalink:"/docs/dev&ops/es/es-faq"}},i={},m=[{value:"\u4f7f\u7528docker \u90e8\u7f72\u4e00\u4e2a\u96c6\u7fa4",id:"\u4f7f\u7528docker-\u90e8\u7f72\u4e00\u4e2a\u96c6\u7fa4",level:2},{value:"Deploy ECK in your Kubernetes cluster",id:"deploy-eck-in-your-kubernetes-cluster",level:2},{value:"Deploy an Elasticsearch cluster",id:"deploy-an-elasticsearch-cluster",level:2},{value:"CustomResource",id:"customresource",level:3}],u={toc:m},p="wrapper";function d(e){var{components:n}=e,t=r(e,["components"]);return(0,a.kt)(p,s({},u,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h2",s({},{id:"\u4f7f\u7528docker-\u90e8\u7f72\u4e00\u4e2a\u96c6\u7fa4"}),"\u4f7f\u7528docker \u90e8\u7f72\u4e00\u4e2a\u96c6\u7fa4"),(0,a.kt)("pre",null,(0,a.kt)("code",s({parentName:"pre"},{className:"language-yaml"}),'version: \'2.2\'\nservices:\n  es01:\n    image: elasticsearch:6.8.23\n    container_name: es01\n    environment:\n      - node.name=es01\n      - cluster.name=es-docker-cluster\n      - bootstrap.memory_lock=true\n      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"\n    ulimits:\n      memlock:\n        soft: -1\n        hard: -1\n    volumes:\n      - data01:/usr/share/elasticsearch/data\n    ports:\n      - 9200:9200\n    networks:\n      - elastic\n  es02:\n    image: elasticsearch:6.8.23\n    container_name: es02\n    environment:\n      - node.name=es02\n      - cluster.name=es-docker-cluster\n      - bootstrap.memory_lock=true\n      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"\n      - "discovery.zen.ping.unicast.hosts=es01"\n    ulimits:\n      memlock:\n        soft: -1\n        hard: -1\n    volumes:\n      - data02:/usr/share/elasticsearch/data\n    networks:\n      - elastic\n  es03:\n    image: elasticsearch:6.8.23\n    container_name: es03\n    environment:\n      - node.name=es03\n      - cluster.name=es-docker-cluster\n      - bootstrap.memory_lock=true\n      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"\n      - "discovery.zen.ping.unicast.hosts=es01"\n    ulimits:\n      memlock:\n        soft: -1\n        hard: -1\n    volumes:\n      - data03:/usr/share/elasticsearch/data\n    networks:\n      - elastic\n  kibana:\n    image: kibana:6.8.23\n    container_name: kibana\n    environment:\n      ELASTICSEARCH_HOSTS: http://es01:9200\n    ports:\n      - 5601:5601\n    depends_on:\n      - es01\n    networks:\n      - elastic\nvolumes:\n  data01:\n    driver: local\n  data02:\n    driver: local\n  data03:\n    driver: local\n\nnetworks:\n  elastic:\n    driver: bridge\n\n\n')),(0,a.kt)("h2",s({},{id:"deploy-eck-in-your-kubernetes-cluster"}),"Deploy ECK in your Kubernetes cluster"),(0,a.kt)("p",null,"\u90e8\u7f72 rbac \u548c es operator :"),(0,a.kt)("pre",null,(0,a.kt)("code",s({parentName:"pre"},{className:"language-bash"}),"kubectl create -f https://download.elastic.co/downloads/eck/1.9.1/crds.yaml\nkubectl apply -f https://download.elastic.co/downloads/eck/1.9.1/operator.yaml\n")),(0,a.kt)("p",null,"\u4f60\u7684k8s \u7248\u672c\u662f 1.16 \u4e4b\u524d\u7684\u7248\u672c\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",s({parentName:"pre"},{className:"language-bash"}),"kubectl create -f https://download.elastic.co/downloads/eck/1.9.1/crds-legacy.yaml\nkubectl apply -f https://download.elastic.co/downloads/eck/1.9.1/operator-legacy.yaml\n")),(0,a.kt)("h2",s({},{id:"deploy-an-elasticsearch-cluster"}),"Deploy an Elasticsearch cluster"),(0,a.kt)("pre",null,(0,a.kt)("code",s({parentName:"pre"},{className:"language-bash"}),"cat <<EOF | kubectl apply -f -\napiVersion: elasticsearch.k8s.elastic.co/v1\nkind: Elasticsearch\nmetadata:\n  name: quickstart\nspec:\n  version: 8.3.2\n  nodeSets:\n  - name: default\n    count: 1 # \u96c6\u7fa4\u8282\u70b9\u6570\n    config:\n      node.store.allow_mmap: false\nEOF\n")),(0,a.kt)("pre",null,(0,a.kt)("code",s({parentName:"pre"},{className:"language-yaml"}),"apiVersion: elasticsearch.k8s.elastic.co/v1\nkind: Elasticsearch\nmetadata:\n  name: fs-storage\n  namespace: elastic-system\nspec:\n  http:\n    tls:\n      selfSignedCertificate:\n        disabled: true\n  version: 6.8.23\n  nodeSets:\n  - name: master\n    count: 3\n    config:\n      node.master: true\n      node.data: false\n      node.ingest: false\n      node.ml: false\n      xpack.ml.enabled: false\n      # node.remote_cluster_client: false          \n      node.store.allow_mmap: false\n    podTemplate:\n      spec:\n        containers:\n        - name: elasticsearch\n          env:\n          - name: ES_JAVA_OPTS\n            value: -Xms2g -Xmx2g\n          resources:\n            requests:\n              memory: 2Gi\n              cpu: 4\n            limits:\n              memory: 4Gi\n  - name: data\n    count: 3\n    config:\n      node.master: false\n      node.data: true\n      node.ingest: true\n      node.ml: false\n      xpack.ml.enabled: false\n      # node.remote_cluster_client: false\n      node.store.allow_mmap: false\n    podTemplate:\n      spec:\n        containers:\n        - name: elasticsearch\n          env:\n          - name: ES_JAVA_OPTS\n            value: -Xms2g -Xmx2g\n          resources:\n            requests:\n              memory: 2Gi\n              cpu: 4\n            limits:\n              memory: 4Gi              \n\n")),(0,a.kt)("p",null,"\u90e8\u7f72 kibana"),(0,a.kt)("pre",null,(0,a.kt)("code",s({parentName:"pre"},{className:"language-yaml"}),"apiVersion: kibana.k8s.elastic.co/v1\nkind: Kibana\nmetadata:\n  name: kibana\n  namespace: elastic-system\nspec:\n  version: 6.8.23\n  count: 1\n  elasticsearchRef:\n    name: fs-es\n  http:\n    tls:\n      selfSignedCertificate:\n        disabled: false\n  podTemplate:\n    spec:\n      containers:\n      - name: kibana\n        env:\n        - name: I18N_LOCALE\n          value: zh-CN\n        resources:\n          requests:\n            memory: 1Gi\n          limits:\n            memory: 2Gi\n")),(0,a.kt)("h3",s({},{id:"customresource"}),"CustomResource"),(0,a.kt)("pre",null,(0,a.kt)("code",s({parentName:"pre"},{className:"language-yaml"}),'\napiVersion: elasticsearch.k8s.elastic.co/v1\nkind: Elasticsearch\nmetadata:\n  name: es-logging\nspec:\n  version: 6.8.23\n  nodeSets:\n  - name: es-logging-data\n    config:\n      # most Elasticsearch configuration parameters are possible to set, e.g: node.attr.attr_name: attr_value\n      node.roles: ["data", "ingest"]\n      # this allows ES to run on nodes even if their vm.max_map_count has not been increased, at a performance cost\n      node.store.allow_mmap: false\n    podTemplate:\n      metadata:\n        labels:\n          # additional labels for pods\n          node.role: data\n      spec:\n        # this changes the kernel setting on the node to allow ES to use mmap\n        # if you uncomment this init container you will likely also want to remove the\n        # "node.store.allow_mmap: false" setting above\n        # initContainers:\n        # - name: sysctl\n        #   securityContext:\n        #     privileged: true\n        #     runAsUser: 0\n        #   command: [\'sh\', \'-c\', \'sysctl -w vm.max_map_count=262144\']\n        ###\n        # uncomment the line below if you are using a service mesh such as linkerd2 that uses service account tokens for pod identification.\n        # automountServiceAccountToken: true\n        containers:\n        - name: elasticsearch\n          # specify resource limits and requests\n          resources:\n            limits:\n              memory: 4Gi\n              cpu: 1\n          env:\n          - name: ES_JAVA_OPTS\n            value: "-Xms2g -Xmx2g"\n    count: 3\n  - name: es-logging-master\n    config:\n      # most Elasticsearch configuration parameters are possible to set, e.g: node.attr.attr_name: attr_value\n      node.roles: ["master"]\n      # this allows ES to run on nodes even if their vm.max_map_count has not been increased, at a performance cost\n      node.store.allow_mmap: false\n    podTemplate:\n      metadata:\n        labels:\n          # additional labels for pods\n          node.role: master\n      spec:\n        # this changes the kernel setting on the node to allow ES to use mmap\n        # if you uncomment this init container you will likely also want to remove the\n        # "node.store.allow_mmap: false" setting above\n        # initContainers:\n        # - name: sysctl\n        #   securityContext:\n        #     privileged: true\n        #     runAsUser: 0\n        #   command: [\'sh\', \'-c\', \'sysctl -w vm.max_map_count=262144\']\n        ###\n        # uncomment the line below if you are using a service mesh such as linkerd2 that uses service account tokens for pod identification.\n        # automountServiceAccountToken: true\n        containers:\n        - name: elasticsearch\n          # specify resource limits and requests\n          resources:\n            limits:\n              memory: 4Gi\n              cpu: 1\n          env:\n          - name: ES_JAVA_OPTS\n            value: "-Xms2g -Xmx2g"\n    count: 3\n\n\n  #   # request 2Gi of persistent data storage for pods in this topology element\n  #   volumeClaimTemplates:\n  #   - metadata:\n  #       name: elasticsearch-data # Do not change this name unless you set up a volume mount for the data path.\n  #     spec:\n  #       accessModes:\n  #       - ReadWriteOnce\n  #       resources:\n  #         requests:\n  #           storage: 2Gi\n  #       storageClassName: standard\n  # # inject secure settings into Elasticsearch nodes from k8s secrets references\n  # secureSettings:\n  # - secretName: ref-to-secret\n  # - secretName: another-ref-to-secret\n  #   # expose only a subset of the secret keys (optional)\n  #   entries:\n  #   - key: value1\n  #     path: newkey # project a key to a specific path (optional)\n  http:\n    service:\n      spec:\n        type: NodePort\n  #   tls:\n  #     selfSignedCertificate:\n  #       # add a list of SANs into the self-signed HTTP certificate\n  #       subjectAltNames:\n  #       - ip: 192.168.1.2\n  #       - ip: 192.168.1.3\n  #       - dns: elasticsearch-sample.example.com\n  #     certificate:\n  #       # provide your own certificate\n  #       secretName: my-cert\n')))}d.isMDXComponent=!0}}]);