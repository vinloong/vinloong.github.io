"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[445],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>f});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function s(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?s(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},s=Object.keys(e);for(r=0;r<s.length;r++)t=s[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)t=s[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=r.createContext({}),u=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},c=function(e){var n=u(e.components);return r.createElement(l.Provider,{value:n},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,s=e.originalType,l=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),d=u(t),m=o,f=d["".concat(l,".").concat(m)]||d[m]||p[m]||s;return t?r.createElement(f,a(a({ref:n},c),{},{components:t})):r.createElement(f,a({ref:n},c))}));function f(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var s=t.length,a=new Array(s);a[0]=m;var i={};for(var l in n)hasOwnProperty.call(n,l)&&(i[l]=n[l]);i.originalType=e,i[d]="string"==typeof e?e:o,a[1]=i;for(var u=2;u<s;u++)a[u]=t[u];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},3454:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>i,default:()=>m,frontMatter:()=>a,metadata:()=>l,toc:()=>c});t(7294);var r=t(3905);function o(){return o=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e},o.apply(this,arguments)}function s(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},s=Object.keys(e);for(r=0;r<s.length;r++)t=s[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)t=s[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}const a={},i=void 0,l={unversionedId:"dev&ops/wsl",id:"dev&ops/wsl",title:"wsl",description:"\u547d\u4ee4",source:"@site/docs/dev&ops/wsl.md",sourceDirName:"dev&ops",slug:"/dev&ops/wsl",permalink:"/docs/dev&ops/wsl",draft:!1,tags:[],version:"current",lastUpdatedAt:1675912862,formattedLastUpdatedAt:"2023\u5e742\u67089\u65e5",frontMatter:{},sidebar:"dev&ops",previous:{title:"command in windows",permalink:"/docs/dev&ops/windows-commands"},next:{title:"wsl2 intall systemd",permalink:"/docs/dev&ops/wsl2-install-systemd"}},u={},c=[{value:"\u547d\u4ee4",id:"\u547d\u4ee4",level:2},{value:"\u914d\u7f6e",id:"\u914d\u7f6e",level:2},{value:"<code> .wslconfig</code>",id:"-wslconfig",level:3},{value:"<code>wsl.conf</code>",id:"wslconf",level:3}],d={toc:c},p="wrapper";function m(e){var{components:n}=e,t=s(e,["components"]);return(0,r.kt)(p,o({},d,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h2",o({},{id:"\u547d\u4ee4"}),"\u547d\u4ee4"),(0,r.kt)("pre",null,(0,r.kt)("code",o({parentName:"pre"},{className:"language-powershell"}),"wsl --install\n\n# \u5b89\u88c5\u7279\u5b9a\u7684 Linux \u53d1\u884c\u7248\nwsl --install --distribution <Distribution Name>\nwsl -d <Distribution Name>\n\n# \u5217\u51fa\u53ef\u7528\u7684 Linux \u53d1\u884c\u7248\nwsl --list --online\nwsl -l -o\n\n# \u5217\u51fa\u5df2\u5b89\u88c5\u7684 Linux \u53d1\u884c\u7248\n# --all\uff08\u5217\u51fa\u6240\u6709\u53d1\u884c\u7248\uff09\u3001--running\uff08\u4ec5\u5217\u51fa\u5f53\u524d\u6b63\u5728\u8fd0\u884c\u7684\u53d1\u884c\u7248\uff09\u6216 --quiet\uff08\u4ec5\u663e\u793a\u53d1\u884c\u7248\u540d\u79f0)\nwsl --list --verbose\nwsl -l -v\n\n# \u5c06 WSL \u7248\u672c\u8bbe\u7f6e\u4e3a 1 \u6216 2\nwsl --set-version <distribution name> <versionNumber>\n\n# \u8bbe\u7f6e\u9ed8\u8ba4 WSL \u7248\u672c\nwsl --set-default-version <Version>\n\n# \u8bbe\u7f6e\u9ed8\u8ba4 Linux \u53d1\u884c\u7248\nwsl --set-default <Distribution Name>\n\n# \u5c06\u76ee\u5f55\u66f4\u6539\u4e3a\u4e3b\u9875\nwsl ~\n\n# \u901a\u8fc7 PowerShell \u6216 CMD \u8fd0\u884c\u7279\u5b9a\u7684 Linux \u53d1\u884c\u7248\nwsl --distribution <Distribution Name> --user <User Name>\n\n# \u66f4\u65b0 WSL\nwsl --update\n\n# \u68c0\u67e5 WSL \u72b6\u6001\nwsl --status\n\n# Help \u547d\u4ee4\nwsl --help\n\n# \u4ee5\u7279\u5b9a\u7528\u6237\u7684\u8eab\u4efd\u8fd0\u884c\nwsl -u <Username>`, `wsl --user <Username>\n\n# \u5173\u95ed\nwsl --shutdown\n\n# Terminate\nwsl --terminate <Distribution Name>\n\n# \u6ce8\u9500\u6216\u5378\u8f7d Linux \u53d1\u884c\u7248\nwsl --unregister <DistributionName>\n")),(0,r.kt)("h2",o({},{id:"\u914d\u7f6e"}),"\u914d\u7f6e"),(0,r.kt)("h3",o({},{id:"-wslconfig"}),(0,r.kt)("inlineCode",{parentName:"h3"}," .wslconfig")),(0,r.kt)("blockquote",null,(0,r.kt)("ul",{parentName:"blockquote"},(0,r.kt)("li",{parentName:"ul"},"\u5b58\u50a8\u5728\u76ee\u5f55\u4e2d ",(0,r.kt)("inlineCode",{parentName:"li"},"%UserProfile%")," "),(0,r.kt)("li",{parentName:"ul"},"\u7528\u4e8e WSL 2 \u7248\u672c\u8fd0\u884c\u7684\u6240\u6709\u5df2\u5b89\u88c5 Linux \u5206\u53d1\u7248\u5168\u5c40\u914d\u7f6e\u8bbe\u7f6e"))),(0,r.kt)("pre",null,(0,r.kt)("code",o({parentName:"pre"},{className:"language-ini"}),"# Settings apply across all Linux distros running on WSL 2\n[wsl2]\n\n# Limits VM memory to use no more than 4 GB, this can be set as whole numbers using GB or MB\nmemory=4GB \n\n# Sets the VM to use two virtual processors\nprocessors=2\n\n# Specify a custom Linux kernel to use with your installed distros. The default kernel used can be found at https://github.com/microsoft/WSL2-Linux-Kernel\nkernel=C:\\\\temp\\\\myCustomKernel\n\n# Sets additional kernel parameters, in this case enabling older Linux base images such as Centos 6\nkernelCommandLine = vsyscall=emulate\n\n# Sets amount of swap storage space to 8GB, default is 25% of available RAM\nswap=8GB\n\n# Sets swapfile path location, default is %USERPROFILE%\\AppData\\Local\\Temp\\swap.vhdx\nswapfile=C:\\\\temp\\\\wsl-swap.vhdx\n\n# Disable page reporting so WSL retains all allocated memory claimed from Windows and releases none back when free\npageReporting=false\n\n# Turn off default connection to bind WSL 2 localhost to Windows localhost\nlocalhostforwarding=true\n\n# Disables nested virtualization\nnestedVirtualization=false\n\n# Turns on output console showing contents of dmesg when opening a WSL 2 distro for debugging\ndebugConsole=true\n")),(0,r.kt)("h3",o({},{id:"wslconf"}),(0,r.kt)("inlineCode",{parentName:"h3"},"wsl.conf")),(0,r.kt)("blockquote",null,(0,r.kt)("ul",{parentName:"blockquote"},(0,r.kt)("li",{parentName:"ul"},"\u4ee5 ",(0,r.kt)("inlineCode",{parentName:"li"},"/etc")," unix \u6587\u4ef6\u7684\u5f62\u5f0f\u5b58\u50a8\u5728\u5206\u53d1\u76ee\u5f55\u4e2d"),(0,r.kt)("li",{parentName:"ul"},"\u53ef\u7528\u4e8e\u7248\u672c\u3001WSL 1 \u6216 WSL 2 \u8fd0\u884c\u7684\u5206\u53d1\u7248"))),(0,r.kt)("pre",null,(0,r.kt)("code",o({parentName:"pre"},{className:"language-ini"}),'# Automatically mount Windows drive when the distribution is launched\n[automount]\n\n# Set to true will automount fixed drives (C:/ or D:/) with DrvFs under the root directory set above. Set to false means drives won\'t be mounted automatically, but need to be mounted manually or with fstab.\nenabled = true\n\n# Sets the directory where fixed drives will be automatically mounted. This example changes the mount location, so your C-drive would be /c, rather than the default /mnt/c. \nroot = /\n\n# DrvFs-specific options can be specified.  \noptions = "metadata,uid=1003,gid=1003,umask=077,fmask=11,case=off"\n\n# Sets the `/etc/fstab` file to be processed when a WSL distribution is launched.\nmountFsTab = true\n\n# Network host settings that enable the DNS server used by WSL 2. This example changes the hostname, sets generateHosts to false, preventing WSL from the default behavior of auto-generating /etc/hosts, and sets generateResolvConf to false, preventing WSL from auto-generating /etc/resolv.conf, so that you can create your own (ie. nameserver 1.1.1.1).\n[network]\nhostname = DemoHost\ngenerateHosts = false\ngenerateResolvConf = false\n\n# Set whether WSL supports interop process like launching Windows apps and adding path variables. Setting these to false will block the launch of Windows processes and block adding $PATH environment variables.\n[interop]\nenabled = false\nappendWindowsPath = false\n\n# Set the user when launching a distribution with WSL.\n[user]\ndefault = DemoUser\n\n# Set a command to run when a new WSL instance launches. This example starts the Docker container service.\n[boot]\ncommand = service docker start\n')))}m.isMDXComponent=!0}}]);