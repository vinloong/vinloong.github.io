"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[1817],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>k});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var i=r.createContext({}),s=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=s(e.components);return r.createElement(i.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),m=s(n),d=a,k=m["".concat(i,".").concat(d)]||m[d]||u[d]||o;return n?r.createElement(k,l(l({ref:t},p),{},{components:n})):r.createElement(k,l({ref:t},p))}));function k(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,l=new Array(o);l[0]=d;var c={};for(var i in t)hasOwnProperty.call(t,i)&&(c[i]=t[i]);c.originalType=e,c[m]="string"==typeof e?e:a,l[1]=c;for(var s=2;s<o;s++)l[s]=n[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},6864:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>c,default:()=>d,frontMatter:()=>l,metadata:()=>i,toc:()=>p});n(7294);var r=n(3905);function a(){return a=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},a.apply(this,arguments)}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}const l={},c=void 0,i={unversionedId:"kubernetes/containers/docker-comm-command",id:"kubernetes/containers/docker-comm-command",title:"docker-comm-command",description:"docker login/logout",source:"@site/docs/kubernetes/containers/docker-comm-command.md",sourceDirName:"kubernetes/containers",slug:"/kubernetes/containers/docker-comm-command",permalink:"/docs/kubernetes/containers/docker-comm-command",draft:!1,tags:[],version:"current",lastUpdatedAt:1675912862,formattedLastUpdatedAt:"2023\u5e742\u67089\u65e5",frontMatter:{},sidebar:"kubernetes",previous:{title:"Dockerfile\u5e38\u7528\u547d\u4ee4\u89e3\u6790",permalink:"/docs/kubernetes/containers/docker-Dockerfile"},next:{title:"docker \u5bb9\u5668\u7ba1\u7406\u5e38\u7528\u547d\u4ee4\u89e3\u6790",permalink:"/docs/kubernetes/containers/docker-commond"}},s={},p=[],m={toc:p},u="wrapper";function d(e){var{components:t}=e,n=o(e,["components"]);return(0,r.kt)(u,a({},m,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,(0,r.kt)("a",a({parentName:"p"},{href:"#login-logout"}),"docker login/logout")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"login\u2014logout"},"login/logout"),"``` docker login [OPTIONS]  [SERVER] docker logout [OPTIONS]  [SERVER] ```",(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("strong",{parentName:"p"},"OPTIONS")," :"),(0,r.kt)("ul",{parentName:"blockquote"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"-u:")," \u767b\u9646\u7684\u7528\u6237\u540d"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"-p:")," \u767b\u9646\u7684\u5bc6\u7801"))),(0,r.kt)("pre",null,(0,r.kt)("code",a({parentName:"pre"},{className:"language-bash"}),"docker rm $(docker ps -q -f status=exited)\n")),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"\u67e5\u770bdocker\u4fe1\u606f\uff08version\u3001info\uff09"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",a({parentName:"pre"},{className:"language-bash"}),"# \u67e5\u770bdocker\u7248\u672c \ndocker version \n\n# \u663e\u793adocker\u7cfb\u7edf\u7684\u4fe1\u606f \ndocker info\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"\u5bf9image\u7684\u64cd\u4f5c\uff08search\u3001pull\u3001images\u3001rmi\u3001history\uff09"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",a({parentName:"pre"},{className:"language-bash"}),"# \u68c0\u7d22image \ndocker search image_name\n\n# \u4e0b\u8f7dimage \ndocker pull image_name \n\n# \u5217\u51fa\u955c\u50cf\u5217\u8868; -a, --all=false Show all images; --no-trunc=false Don't truncate output; -q, --quiet=false Only show numeric IDs \ndocker images\n\n# \u5220\u9664\u4e00\u4e2a\u6216\u8005\u591a\u4e2a\u955c\u50cf; -f, --force=false Force; --no-prune=false Do not delete untagged parents \ndocker rmi image_name\n \n# \u663e\u793a\u4e00\u4e2a\u955c\u50cf\u7684\u5386\u53f2; --no-trunc=false Don't truncate output; -q, --quiet=false Only show numeric IDs \ndocker his\n\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"\u542f\u52a8\u5bb9\u5668\uff08run\uff09"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",a({parentName:"pre"},{className:"language-bash"}),'# \u5728\u5bb9\u5668\u4e2d\u8fd0\u884c"echo"\u547d\u4ee4\uff0c\u8f93\u51fa"hello word" \ndocker run image_name echo "hello word" \n\n# \u4ea4\u4e92\u5f0f\u8fdb\u5165\u5bb9\u5668\u4e2d \ndocker run -i -t image_name /bin/bash \n\n# \u5728\u5bb9\u5668\u4e2d\u5b89\u88c5\u65b0\u7684\u7a0b\u5e8f \ndocker run image_name apt-get install -y app_name\n\n# \u5728\u4e00\u6b21\u8fdb\u521a\u624d\u8fdb\u5165\u7684\u5bb9\u5668\ndocker exec -i -t [\u5bb9\u5668ID]\n'))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"\u67e5\u770b\u5bb9\u5668\uff08ps\uff09"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",a({parentName:"pre"},{className:"language-bash"}),"# \u5217\u51fa\u5f53\u524d\u6240\u6709\u6b63\u5728\u8fd0\u884c\u7684container \ndocker ps \n\n# \u5217\u51fa\u6240\u6709\u7684container \ndocker ps -a \n\n# \u5217\u51fa\u6700\u8fd1\u4e00\u6b21\u542f\u52a8\u7684container \ndocker ps -l\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"\u4fdd\u5b58\u5bf9\u5bb9\u5668\u7684\u4fee\u6539\uff08commit\uff09"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",a({parentName:"pre"},{className:"language-bash"}),'# \u4fdd\u5b58\u5bf9\u5bb9\u5668\u7684\u4fee\u6539; -a, --author="" Author; -m, --message="" Commit message \ndocker commit ID new_image_name\n'))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"\u5bf9\u5bb9\u5668\u7684\u64cd\u4f5c\uff08rm\u3001stop\u3001start\u3001kill\u3001logs\u3001diff\u3001top\u3001cp\u3001restart\u3001attach)"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",a({parentName:"pre"},{className:"language-bash"}),"# \u5220\u9664\u6240\u6709\u5bb9\u5668 \ndocker rm `docker ps -a -q` \n   \n# \u5220\u9664\u5355\u4e2a\u5bb9\u5668; -f, --force=false; -l, --link=false Remove the specified link and not the underlying container; -v, --volumes=false Remove the volumes associated to the container \ndocker rm Name/ID \n   \n# \u505c\u6b62\u3001\u542f\u52a8\u3001\u6740\u6b7b\u4e00\u4e2a\u5bb9\u5668 \ndocker stop Name/ID \ndocker start Name/ID \ndocker kill Name/ID \n   \n# \u4ece\u4e00\u4e2a\u5bb9\u5668\u4e2d\u53d6\u65e5\u5fd7; -f, --follow=false Follow log output; -t, --timestamps=false Show timestamps \ndocker logs Name/ID \n   \n# \u5217\u51fa\u4e00\u4e2a\u5bb9\u5668\u91cc\u9762\u88ab\u6539\u53d8\u7684\u6587\u4ef6\u6216\u8005\u76ee\u5f55\uff0clist\u5217\u8868\u4f1a\u663e\u793a\u51fa\u4e09\u79cd\u4e8b\u4ef6\uff0cA \u589e\u52a0\u7684\uff0cD \u5220\u9664\u7684\uff0cC \u88ab\u6539\u53d8\u7684 \ndocker diff Name/ID \n   \n# \u663e\u793a\u4e00\u4e2a\u8fd0\u884c\u7684\u5bb9\u5668\u91cc\u9762\u7684\u8fdb\u7a0b\u4fe1\u606f \ndocker top Name/ID \n   \n# \u4ece\u5bb9\u5668\u91cc\u9762\u62f7\u8d1d\u6587\u4ef6/\u76ee\u5f55\u5230\u672c\u5730\u4e00\u4e2a\u8def\u5f84 \ndocker cp Name:/container_path to_path \ndocker cp ID:/container_path to_path \n   \n# \u91cd\u542f\u4e00\u4e2a\u6b63\u5728\u8fd0\u884c\u7684\u5bb9\u5668; -t, --time=10 Number of seconds to try to stop for before killing the container, Default=10 \ndocker restart Name/ID \n   \n# \u9644\u52a0\u5230\u4e00\u4e2a\u8fd0\u884c\u7684\u5bb9\u5668\u4e0a\u9762; --no-stdin=false Do not attach stdin; --sig-proxy=true Proxify all received signal to the process \ndocker attach ID\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"\u4fdd\u5b58\u548c\u52a0\u8f7d\u955c\u50cf\uff08save\u3001load\uff09"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",a({parentName:"pre"},{className:"language-bash"}),'# \u4fdd\u5b58\u955c\u50cf\u5230\u4e00\u4e2atar\u5305; -o, --output="" Write to an file \ndocker save image_name -o file_path \n\n# \u52a0\u8f7d\u4e00\u4e2atar\u5305\u683c\u5f0f\u7684\u955c\u50cf; -i, --input="" Read from a tar archive file \ndocker load -i file_path \n   \n# \u673a\u5668a \ndocker save image_name > /home/save.tar\n\n# \u4f7f\u7528scp\u5c06save.tar\u62f7\u5230\u673a\u5668b\u4e0a\uff0c\u7136\u540e:\ndocker load < /home/save.tar\n'))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"\u767b\u5f55registry server\uff08login\uff09"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",a({parentName:"pre"},{className:"language-bash"}),'# \u767b\u5f55 registry server; -e, --email="" Email; -p, --password="" Password; -u, --username="" Username\ndocker login\n'))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"\u53d1\u5e03image\uff08push\uff09"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",a({parentName:"pre"},{className:"language-bash"}),"# \u53d1\u5e03docker\u955c\u50cf \ndocker push new_image_name\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"\u6839\u636eDockerfile \u6784\u5efa\u51fa\u4e00\u4e2a\u5bb9\u5668"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",a({parentName:"pre"},{className:"language-bash"}),'# build \n#   --no-cache=false Do not use cache when building the image \n#   -q, --quiet=false Suppress the verbose output generated by the containers \n#   --rm=true Remove intermediate containers after a successful build \n#   -t, --tag="" \n#  Repository name (and optionally a tag) to be applied to the resulting image in case of success \n\ndocker build -t image_name Dockerfile_path\n')))))}d.isMDXComponent=!0}}]);