"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[9850],{3905:(e,n,t)=>{t.d(n,{Zo:()=>i,kt:()=>k});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function p(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var c=a.createContext({}),s=function(e){var n=a.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},i=function(e){var n=s(e.components);return a.createElement(c.Provider,{value:n},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,i=p(e,["components","mdxType","originalType","parentName"]),d=s(t),m=r,k=d["".concat(c,".").concat(m)]||d[m]||u[m]||o;return t?a.createElement(k,l(l({ref:n},i),{},{components:t})):a.createElement(k,l({ref:n},i))}));function k(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,l=new Array(o);l[0]=m;var p={};for(var c in n)hasOwnProperty.call(n,c)&&(p[c]=n[c]);p.originalType=e,p[d]="string"==typeof e?e:r,l[1]=p;for(var s=2;s<o;s++)l[s]=t[s];return a.createElement.apply(null,l)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},848:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>p,default:()=>m,frontMatter:()=>l,metadata:()=>c,toc:()=>i});t(7294);var a=t(3905);function r(){return r=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var a in t)Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a])}return e},r.apply(this,arguments)}function o(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}const l={title:"ceph \u4f18\u5316",date:new Date("2022-04-05T00:00:00.000Z"),icon:"devops",category:["dev&ops"],tag:["ceph"]},p="\u786c\u4ef6",c={unversionedId:"dev&ops/ceph/ceph-optimization",id:"dev&ops/ceph/ceph-optimization",title:"ceph \u4f18\u5316",description:"\u7565 ... ...",source:"@site/docs/dev&ops/ceph/ceph-optimization.md",sourceDirName:"dev&ops/ceph",slug:"/dev&ops/ceph/ceph-optimization",permalink:"/docs/dev&ops/ceph/ceph-optimization",draft:!1,tags:[],version:"current",lastUpdatedAt:1675912862,formattedLastUpdatedAt:"2023\u5e742\u67089\u65e5",frontMatter:{title:"ceph \u4f18\u5316",date:"2022-04-05T00:00:00.000Z",icon:"devops",category:["dev&ops"],tag:["ceph"]},sidebar:"dev&ops",previous:{title:"CEPH",permalink:"/docs/dev&ops/ceph/"},next:{title:"choco install",permalink:"/docs/dev&ops/choco"}},s={},i=[{value:"\u7cfb\u7edf",id:"\u7cfb\u7edf",level:2},{value:"ceph \u53c2\u6570",id:"ceph-\u53c2\u6570",level:2},{value:"\u8bfb\u5199\u6d4b\u8bd5",id:"\u8bfb\u5199\u6d4b\u8bd5",level:2}],d={toc:i},u="wrapper";function m(e){var{components:n}=e,t=o(e,["components"]);return(0,a.kt)(u,r({},d,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",r({},{id:"\u786c\u4ef6"}),"\u786c\u4ef6"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"\u7565 ... ...")),(0,a.kt)("h1",r({},{id:"\u8f6f\u4ef6"}),"\u8f6f\u4ef6"),(0,a.kt)("h2",r({},{id:"\u7cfb\u7edf"}),"\u7cfb\u7edf"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("ol",{parentName:"li"},(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"kernel pid max"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",r({parentName:"pre"},{className:"language-shell"}),"echo 4194303 > /proc/sys/kernel/pid_max\n"))))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("ol",r({parentName:"li"},{start:2}),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"read_ahead"),(0,a.kt)("blockquote",{parentName:"li"},(0,a.kt)("p",{parentName:"blockquote"},"\u901a\u8fc7\u6570\u636e\u9884\u8bfb\u5e76\u4e14\u8bb0\u8f7d\u5230\u968f\u673a\u8bbf\u95ee\u5185\u5b58\u65b9\u5f0f\u63d0\u9ad8\u78c1\u76d8\u8bfb\u64cd\u4f5c")),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",r({parentName:"pre"},{className:"language-shell"}),'# \u8bfb\u53d6\u9ed8\u8ba4\u503c\n$ cat /sys/block/sd[a,b]/queue/read_ahead_kb\n\n# \u6839\u636e\u4e00\u4e9bCeph\u7684\u516c\u5f00\u5206\u4eab\uff0c8192\u662f\u6bd4\u8f83\u7406\u60f3\u7684\u503c\n$ echo "8192" > /sys/block/sd[a,b]/queue/read_ahead_kb\n'))))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("ol",r({parentName:"li"},{start:3}),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"swappiness "),(0,a.kt)("blockquote",{parentName:"li"},(0,a.kt)("p",{parentName:"blockquote"},"\u4f7f\u7528swap \u4f1a\u5f71\u54cd\u6027\u80fd")),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",r({parentName:"pre"},{className:"language-shell"}),'echo "vm.swappiness = 0" | tee -a /etc/sysctl.conf\n'))))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("ol",r({parentName:"li"},{start:4}),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"I/O Scheduler"),(0,a.kt)("blockquote",{parentName:"li"},(0,a.kt)("p",{parentName:"blockquote"},"SSD\u8981\u7528noop\uff0cSATA/SAS\u4f7f\u7528deadline")),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",r({parentName:"pre"},{className:"language-shell"}),'echo "deadline" > /sys/block/sd[a,b]/queue/scheduler\necho "noop" > /sys/block/sd[a,b]/queue/scheduler\n')))))),(0,a.kt)("h2",r({},{id:"ceph-\u53c2\u6570"}),"ceph \u53c2\u6570"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("ol",{parentName:"li"},(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"PG Number"),(0,a.kt)("blockquote",{parentName:"li"},(0,a.kt)("p",{parentName:"blockquote"},"PG\u548cPGP\u6570\u91cf\u4e00\u5b9a\u8981\u6839\u636eOSD\u7684\u6570\u91cf\u8fdb\u884c\u8c03\u6574\uff0c\u8ba1\u7b97\u516c\u5f0f\u5982\u4e0b\uff0c\u4f46\u662f\u6700\u540e\u7b97\u51fa\u7684\u7ed3\u679c\u4e00\u5b9a\u8981\u63a5\u8fd1\u6216\u8005\u7b49\u4e8e\u4e00\u4e2a2\u7684\u6307\u6570")),(0,a.kt)("p",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"p"},"Total_pgs = (total_number_of_osd * 100)/max_replication_count")),(0,a.kt)("blockquote",{parentName:"li"},(0,a.kt)("p",{parentName:"blockquote"},"\u4f8b\u5982\uff1a \u6211\u4eec 5\u4e2aOSD, \u526f\u672c\u6570\u662f3\uff0c \u6839\u636e\u516c\u5f0f\u8ba1\u7b97\u7ed3\u679c\u662f 166\uff0c  \u6700\u63a5\u8fd1 128\uff0c\u6240\u4ee5\u9700\u8981\u8bbe\u5b9a pool(volumes) \u7684pg_num\u548cpgp_num \u90fd\u4e3a128")),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",r({parentName:"pre"},{className:"language-shell"}),"ceph osd pool set {pool_name} pg_num 128\nceph osd pool set {pool_name} pgp_num 128\n")))))),(0,a.kt)("h1",r({},{id:"ceph-\u8bfb\u5199\u6d4b\u8bd5"}),"ceph \u8bfb\u5199\u6d4b\u8bd5"),(0,a.kt)("p",null,"RADOS \u6027\u80fd\u6d4b\u8bd5\uff1a\u4f7f\u7528 Ceph \u81ea\u5e26\u7684",(0,a.kt)("inlineCode",{parentName:"p"},"rados bench"),"\u5de5\u5177"),(0,a.kt)("p",null,"\u8bed\u6cd5\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",r({parentName:"pre"},{className:"language-shell"}),"rados bench -p <pool_name> <seconds> <write|seq|rand> -b <block size> -t --no-cleanup\n")),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"\u53c2\u6570\u8bf4\u660e\uff1a"),(0,a.kt)("p",{parentName:"blockquote"},(0,a.kt)("inlineCode",{parentName:"p"},"pool_name"),"\uff1a\u6d4b\u8bd5\u6240\u9488\u5bf9\u7684\u5b58\u50a8\u6c60\n",(0,a.kt)("inlineCode",{parentName:"p"},"seconds"),"\uff1a\u6d4b\u8bd5\u6240\u6301\u7eed\u7684\u79d2\u6570\n",(0,a.kt)("inlineCode",{parentName:"p"},"<write|seq|rand>"),"\uff1a\u64cd\u4f5c\u6a21\u5f0f\uff0cwrite\uff1a\u5199\uff0cseq\uff1a\u987a\u5e8f\u8bfb\uff1brand\uff1a\u968f\u673a\u8bfb\n",(0,a.kt)("inlineCode",{parentName:"p"},"-b"),"\uff1ablock size\uff0c\u5373\u5757\u5927\u5c0f\uff0c\u9ed8\u8ba4\u4e3a 4M\n",(0,a.kt)("inlineCode",{parentName:"p"},"-t"),"\uff1a\u8bfb/\u5199\u5e76\u884c\u6570\uff0c\u9ed8\u8ba4\u4e3a 16\n",(0,a.kt)("inlineCode",{parentName:"p"},"--no-cleanup")," \u8868\u793a\u6d4b\u8bd5\u5b8c\u6210\u540e\u4e0d\u5220\u9664\u6d4b\u8bd5\u7528\u6570\u636e")),(0,a.kt)("h2",r({},{id:"\u8bfb\u5199\u6d4b\u8bd5"}),"\u8bfb\u5199\u6d4b\u8bd5"),(0,a.kt)("pre",null,(0,a.kt)("code",r({parentName:"pre"},{className:"language-shell"}),"# \u5199\u5165\u6d4b\u8bd5\n$ rados bench -p myfs-data0 10 write --no-cleanup\nhints = 1\nMaintaining 16 concurrent writes of 4194304 bytes to objects of size 4194304 for up to 10 seconds or 0 objects\nObject prefix: benchmark_data_rook-ceph-tools-64bd84c8b5-rq_69203\n  sec Cur ops   started  finished  avg MB/s  cur MB/s last lat(s)  avg lat(s)\n    0       0         0         0         0         0           -           0\n    1      16        34        18   71.9932        72    0.591918     0.58711\n    2      16        62        46   91.9882       112    0.840758    0.584572\n    3      16        87        71    94.653       100    0.431223    0.604528\n    4      16       114        98   97.9853       108    0.341559    0.595973\n    5      16       142       126   100.785       112    0.794463    0.602104\n    6      16       168       152   101.318       104    0.347406    0.592001\n    7      16       195       179    102.27       108    0.312605    0.600738\n    8      16       221       205   102.484       104    0.378027     0.60132\n    9      16       246       230   102.206       100    0.399448    0.595864\n   10      16       275       259   103.584       116    0.316101    0.599753\nTotal time run:         10.5516\nTotal writes made:      275\nWrite size:             4194304\nObject size:            4194304\nBandwidth (MB/sec):     104.249\nStddev Bandwidth:       12.2855\nMax bandwidth (MB/sec): 116\nMin bandwidth (MB/sec): 72\nAverage IOPS:           26\nStddev IOPS:            3.07137\nMax IOPS:               29\nMin IOPS:               18\nAverage Latency(s):     0.597843\nStddev Latency(s):      0.201114\nMax latency(s):         1.32004\nMin latency(s):         0.192275\n\n# \u987a\u5e8f\u8bfb\n$ rados bench -p myfs-data0 10 seq\nhints = 1\n  sec Cur ops   started  finished  avg MB/s  cur MB/s last lat(s)  avg lat(s)\n    0       0         0         0         0         0           -           0\n    1      16        40        24   95.9743        96    0.459347    0.426068\n    2      16        67        51   101.978       108    0.955426     0.50726\n    3      16        94        78   103.979       108    0.684261    0.551388\n    4      16       119       103    102.98       100    0.444902    0.561134\n    5      16       148       132    105.58       116    0.236886    0.554344\n    6      16       176       160   106.647       112    0.235661    0.556833\n    7      16       201       185   105.695       100    0.946928    0.569635\n    8      16       228       212   105.981       108    0.546374    0.568771\n    9      16       255       239   106.203       108    0.346846    0.574118\n   10       7       275       268   107.181       116     1.42381    0.567453\nTotal time run:       10.3294\nTotal reads made:     275\nRead size:            4194304\nObject size:          4194304\nBandwidth (MB/sec):   106.492\nAverage IOPS:         26\nStddev IOPS:          1.68655\nMax IOPS:             29\nMin IOPS:             24\nAverage Latency(s):   0.581478\nMax latency(s):       1.56143\nMin latency(s):       0.0813735\n\n\n# \u968f\u673a\u8bfb\n$ rados bench -p  myfs-data0 10 rand\nhints = 1\n  sec Cur ops   started  finished  avg MB/s  cur MB/s last lat(s)  avg lat(s)\n    0       0         0         0         0         0           -           0\n    1      16        39        23   91.9722        92     0.32398    0.375156\n    2      16        67        51   101.976       112    0.112495    0.474886\n    3      16        95        79   105.309       112    0.494923    0.512701\n    4      16       121       105   104.977       104     1.43835     0.53186\n    5      16       149       133   106.378       112    0.150013     0.54715\n    6      16       176       160   106.645       108     1.34486    0.543604\n    7      16       203       187   106.837       108    0.228958    0.561311\n    8      16       230       214    106.98       108     1.41135    0.560095\n    9      16       257       241   107.091       108    0.186098    0.566892\n   10      16       284       268    107.18       108    0.926334    0.569814\nTotal time run:       10.5311\nTotal reads made:     284\nRead size:            4194304\nObject size:          4194304\nBandwidth (MB/sec):   107.87\nAverage IOPS:         26\nStddev IOPS:          1.47573\nMax IOPS:             28\nMin IOPS:             23\nAverage Latency(s):   0.577085\nMax latency(s):       1.48504\nMin latency(s):       0.0750272\n\n# \u6e05\u7406\u6d4b\u8bd5\u6570\u636e\n$ rados -p  myfs-data0 cleanup\nRemoved 275 objects\n")),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"}," ",(0,a.kt)("strong",{parentName:"p"},"rados bench \u53c2\u6570\u8bf4\u660e\uff1a")),(0,a.kt)("pre",{parentName:"blockquote"},(0,a.kt)("code",r({parentName:"pre"},{className:"language-undefined"}),"cur \u662fcurrent\u7684\u7f29\u5199 \ncur MB/s \u5f53\u524d\u901f\u5ea6\navg MB/s \u5e73\u5747\u901f\u5ea6\nBandwidth (MB/sec): \u541e\u5410\u91cf\nAverage IOPS: \u5e73\u5747iops\nStddev IOPS: \u6807\u51c6\u504f\u5dee\nAverage Latency(s): \u5e73\u5747\u5ef6\u8fdf\n"))))}m.isMDXComponent=!0}}]);