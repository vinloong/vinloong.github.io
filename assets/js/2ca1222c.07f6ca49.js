"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[3406],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>k});var a=n(7294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,l=function(e,t){if(null==e)return{};var n,a,l={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var c=a.createContext({}),p=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},u=function(e){var t=p(e.components);return a.createElement(c.Provider,{value:t},e.children)},d="mdxType",i={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,l=e.mdxType,o=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=p(n),m=l,k=d["".concat(c,".").concat(m)]||d[m]||i[m]||o;return n?a.createElement(k,r(r({ref:t},u),{},{components:n})):a.createElement(k,r({ref:t},u))}));function k(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var o=n.length,r=new Array(o);r[0]=m;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[d]="string"==typeof e?e:l,r[1]=s;for(var p=2;p<o;p++)r[p]=n[p];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},9546:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>s,default:()=>m,frontMatter:()=>r,metadata:()=>c,toc:()=>u});n(7294);var a=n(3905);function l(){return l=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},l.apply(this,arguments)}function o(e,t){if(null==e)return{};var n,a,l=function(e,t){if(null==e)return{};var n,a,l={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}const r={title:"\u5e38\u7528\u7684 kubectl \u547d\u4ee4\u548c\u6807\u5fd7",author:"Uncle Dragon",date:new Date("2021-10-13T00:00:00.000Z"),category:null,tag:["kubectl"]},s=void 0,c={unversionedId:"kubernetes/kubectl-cm-cmds",id:"kubernetes/kubectl-cm-cmds",title:"\u5e38\u7528\u7684 kubectl \u547d\u4ee4\u548c\u6807\u5fd7",description:"Kubectl \u81ea\u52a8\u8865\u5168",source:"@site/docs/kubernetes/kubectl-cm-cmds.md",sourceDirName:"kubernetes",slug:"/kubernetes/kubectl-cm-cmds",permalink:"/docs/kubernetes/kubectl-cm-cmds",draft:!1,tags:[],version:"current",lastUpdatedAt:1675912862,formattedLastUpdatedAt:"2023\u5e742\u67089\u65e5",frontMatter:{title:"\u5e38\u7528\u7684 kubectl \u547d\u4ee4\u548c\u6807\u5fd7",author:"Uncle Dragon",date:"2021-10-13T00:00:00.000Z",category:null,tag:["kubectl"]},sidebar:"kubernetes",previous:{title:"quick-start",permalink:"/docs/kubernetes/kubebuilder/quick-start"},next:{title:"kubectl-conventions",permalink:"/docs/kubernetes/kubectl-conventions"}},p={},u=[{value:"Kubectl \u81ea\u52a8\u8865\u5168",id:"kubectl-\u81ea\u52a8\u8865\u5168",level:2},{value:"BASH",id:"bash",level:3},{value:"ZSH",id:"zsh",level:3},{value:"Kubectl \u4e0a\u4e0b\u6587\u548c\u914d\u7f6e",id:"kubectl-\u4e0a\u4e0b\u6587\u548c\u914d\u7f6e",level:2},{value:"Kubectl apply",id:"kubectl-apply",level:2},{value:"\u521b\u5efa\u5bf9\u8c61",id:"creating-objects",level:2},{value:"\u67e5\u770b\u548c\u67e5\u627e\u8d44\u6e90",id:"\u67e5\u770b\u548c\u67e5\u627e\u8d44\u6e90",level:2},{value:"\u66f4\u65b0\u8d44\u6e90",id:"\u66f4\u65b0\u8d44\u6e90",level:2},{value:"\u90e8\u5206\u66f4\u65b0\u8d44\u6e90",id:"\u90e8\u5206\u66f4\u65b0\u8d44\u6e90",level:2},{value:"\u7f16\u8f91\u8d44\u6e90",id:"\u7f16\u8f91\u8d44\u6e90",level:2},{value:"\u5bf9\u8d44\u6e90\u8fdb\u884c\u4f38\u7f29",id:"\u5bf9\u8d44\u6e90\u8fdb\u884c\u4f38\u7f29",level:2},{value:"\u5220\u9664\u8d44\u6e90",id:"\u5220\u9664\u8d44\u6e90",level:2},{value:"\u4e0e\u8fd0\u884c\u4e2d\u7684 Pods \u8fdb\u884c\u4ea4\u4e92",id:"\u4e0e\u8fd0\u884c\u4e2d\u7684-pods-\u8fdb\u884c\u4ea4\u4e92",level:2},{value:"\u4e0e Deployments \u548c Services \u8fdb\u884c\u4ea4\u4e92",id:"\u4e0e-deployments-\u548c-services-\u8fdb\u884c\u4ea4\u4e92",level:2},{value:"\u4e0e\u8282\u70b9\u548c\u96c6\u7fa4\u8fdb\u884c\u4ea4\u4e92",id:"\u4e0e\u8282\u70b9\u548c\u96c6\u7fa4\u8fdb\u884c\u4ea4\u4e92",level:2},{value:"\u8d44\u6e90\u7c7b\u578b",id:"\u8d44\u6e90\u7c7b\u578b",level:3},{value:"\u683c\u5f0f\u5316\u8f93\u51fa",id:"\u683c\u5f0f\u5316\u8f93\u51fa",level:3},{value:"Kubectl \u65e5\u5fd7\u8f93\u51fa\u8be6\u7ec6\u7a0b\u5ea6\u548c\u8c03\u8bd5",id:"kubectl-\u65e5\u5fd7\u8f93\u51fa\u8be6\u7ec6\u7a0b\u5ea6\u548c\u8c03\u8bd5",level:3}],d={toc:u},i="wrapper";function m(e){var{components:t}=e,n=o(e,["components"]);return(0,a.kt)(i,l({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",l({},{id:"kubectl-\u81ea\u52a8\u8865\u5168"}),"Kubectl \u81ea\u52a8\u8865\u5168"),(0,a.kt)("h3",l({},{id:"bash"}),"BASH"),(0,a.kt)("pre",null,(0,a.kt)("code",l({parentName:"pre"},{className:"language-bash"}),'# \u5728 bash \u4e2d\u8bbe\u7f6e\u5f53\u524d shell \u7684\u81ea\u52a8\u8865\u5168\uff0c\u8981\u5148\u5b89\u88c5 bash-completion \u5305\u3002\nsource <(kubectl completion bash) \n# \u5728\u60a8\u7684 bash shell \u4e2d\u6c38\u4e45\u7684\u6dfb\u52a0\u81ea\u52a8\u8865\u5168\necho "source <(kubectl completion bash)" >> ~/.bashrc \n')),(0,a.kt)("p",null,"\u60a8\u8fd8\u53ef\u4ee5\u4e3a ",(0,a.kt)("inlineCode",{parentName:"p"},"kubectl")," \u4f7f\u7528\u4e00\u4e2a\u901f\u8bb0\u522b\u540d\uff0c\u8be5\u522b\u540d\u4e5f\u53ef\u4ee5\u4e0e completion \u4e00\u8d77\u4f7f\u7528\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",l({parentName:"pre"},{className:"language-bash"}),"alias k=kubectl\ncomplete -F __start_kubectl k\n")),(0,a.kt)("h3",l({},{id:"zsh"}),"ZSH"),(0,a.kt)("pre",null,(0,a.kt)("code",l({parentName:"pre"},{className:"language-bash"}),'# \u5728 zsh \u4e2d\u8bbe\u7f6e\u5f53\u524d shell \u7684\u81ea\u52a8\u8865\u5168\nsource <(kubectl completion zsh)  \n# \u5728\u60a8\u7684 zsh shell \u4e2d\u6c38\u4e45\u7684\u6dfb\u52a0\u81ea\u52a8\u8865\u5168\necho "[[ $commands[kubectl] ]] && source <(kubectl completion zsh)" >> ~/.zshrc \n')),(0,a.kt)("h2",l({},{id:"kubectl-\u4e0a\u4e0b\u6587\u548c\u914d\u7f6e"}),"Kubectl \u4e0a\u4e0b\u6587\u548c\u914d\u7f6e"),(0,a.kt)("p",null,"\u8bbe\u7f6e ",(0,a.kt)("inlineCode",{parentName:"p"},"kubectl")," \u4e0e\u54ea\u4e2a Kubernetes \u96c6\u7fa4\u8fdb\u884c\u901a\u4fe1\u5e76\u4fee\u6539\u914d\u7f6e\u4fe1\u606f\u3002"),(0,a.kt)("p",null,"\u6587\u6863\u83b7\u53d6\u914d\u7f6e\u6587\u4ef6\u8be6\u7ec6\u4fe1\u606f\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",l({parentName:"pre"},{className:"language-bash"}),"# \u663e\u793a\u5408\u5e76\u7684 kubeconfig \u914d\u7f6e\u3002\nkubectl config view \n\n# \u540c\u65f6\u4f7f\u7528\u591a\u4e2a kubeconfig \u6587\u4ef6\u5e76\u67e5\u770b\u5408\u5e76\u7684\u914d\u7f6e\nKUBECONFIG=~/.kube/config:~/.kube/kubconfig2 kubectl config view\n\n# \u83b7\u53d6 e2e \u7528\u6237\u7684\u5bc6\u7801\nkubectl config view -o jsonpath='{.users[?(@.name == \"e2e\")].user.password}'\n\n# \u663e\u793a\u7b2c\u4e00\u4e2a\u7528\u6237\nkubectl config view -o jsonpath='{.users[].name}'    \n# \u83b7\u53d6\u7528\u6237\u5217\u8868\nkubectl config view -o jsonpath='{.users[*].name}'   \n# \u663e\u793a\u4e0a\u4e0b\u6587\u5217\u8868\nkubectl config get-contexts                          \n# \u5c55\u793a\u5f53\u524d\u6240\u5904\u7684\u4e0a\u4e0b\u6587\nkubectl config current-context                       \n# \u8bbe\u7f6e\u9ed8\u8ba4\u7684\u4e0a\u4e0b\u6587\u4e3a my-cluster-name\nkubectl config use-context my-cluster-name           \n\n# \u6dfb\u52a0\u65b0\u7684\u7528\u6237\u914d\u7f6e\u5230 kubeconf \u4e2d\uff0c\u4f7f\u7528 basic auth \u8fdb\u884c\u8eab\u4efd\u8ba4\u8bc1\nkubectl config set-credentials kubeuser/foo.kubernetes.com --username=kubeuser --password=kubepassword\n\n# \u5728\u6307\u5b9a\u4e0a\u4e0b\u6587\u4e2d\u6301\u4e45\u6027\u5730\u4fdd\u5b58\u540d\u5b57\u7a7a\u95f4\uff0c\u4f9b\u6240\u6709\u540e\u7eed kubectl \u547d\u4ee4\u4f7f\u7528\nkubectl config set-context --current --namespace=ggckad-s2\n\n# \u4f7f\u7528\u7279\u5b9a\u7684\u7528\u6237\u540d\u548c\u540d\u5b57\u7a7a\u95f4\u8bbe\u7f6e\u4e0a\u4e0b\u6587\nkubectl config set-context gce --user=cluster-admin --namespace=foo \\\n  && kubectl config use-context gce\n\n# \u5220\u9664\u7528\u6237 foo\nkubectl config unset users.foo                       \n")),(0,a.kt)("h2",l({},{id:"kubectl-apply"}),"Kubectl apply"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"apply")," \u901a\u8fc7\u5b9a\u4e49 Kubernetes \u8d44\u6e90\u7684\u6587\u4ef6\u6765\u7ba1\u7406\u5e94\u7528\u3002\n\u5b83\u901a\u8fc7\u8fd0\u884c ",(0,a.kt)("inlineCode",{parentName:"p"},"kubectl apply")," \u5728\u96c6\u7fa4\u4e2d\u521b\u5efa\u548c\u66f4\u65b0\u8d44\u6e90\u3002\n\u8fd9\u662f\u5728\u751f\u4ea7\u4e2d\u7ba1\u7406 Kubernetes \u5e94\u7528\u7684\u63a8\u8350\u65b9\u6cd5\u3002\n\u53c2\u89c1 ",(0,a.kt)("a",l({parentName:"p"},{href:"https://kubectl.docs.kubernetes.io"}),"Kubectl \u6587\u6863"),"\u3002"),(0,a.kt)("h2",l({},{id:"creating-objects"}),"\u521b\u5efa\u5bf9\u8c61"),(0,a.kt)("p",null,"Kubernetes \u914d\u7f6e\u53ef\u4ee5\u7528 YAML \u6216 JSON \u5b9a\u4e49\u3002\u53ef\u4ee5\u4f7f\u7528\u7684\u6587\u4ef6\u6269\u5c55\u540d\u6709\n",(0,a.kt)("inlineCode",{parentName:"p"},".yaml"),"\u3001",(0,a.kt)("inlineCode",{parentName:"p"},".yml")," \u548c ",(0,a.kt)("inlineCode",{parentName:"p"},".json"),"\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",l({parentName:"pre"},{className:"language-bash"}),'# \u521b\u5efa\u8d44\u6e90\nkubectl apply -f ./my-manifest.yaml           \n# \u4f7f\u7528\u591a\u4e2a\u6587\u4ef6\u521b\u5efa\nkubectl apply -f ./my1.yaml -f ./my2.yaml     \n# \u57fa\u4e8e\u76ee\u5f55\u4e0b\u7684\u6240\u6709\u6e05\u5355\u6587\u4ef6\u521b\u5efa\u8d44\u6e90\nkubectl apply -f ./dir                        \n# \u4ece URL \u4e2d\u521b\u5efa\u8d44\u6e90\nkubectl apply -f https://git.io/vPieo         \n# \u542f\u52a8\u5355\u5b9e\u4f8b nginx\nkubectl create deployment nginx --image=nginx \n\n# \u521b\u5efa\u4e00\u4e2a\u6253\u5370 \u201cHello World\u201d \u7684 Job\nkubectl create job hello --image=busybox -- echo "Hello World" \n\n# \u521b\u5efa\u4e00\u4e2a\u6253\u5370 \u201cHello World\u201d \u95f4\u96941\u5206\u949f\u7684 CronJob\nkubectl create cronjob hello --image=busybox   --schedule="*/1 * * * *" -- echo "Hello World"    \n\n# \u83b7\u53d6 pod \u6e05\u5355\u7684\u6587\u6863\u8bf4\u660e\nkubectl explain pods                          \n\n# \u4ece\u6807\u51c6\u8f93\u5165\u521b\u5efa\u591a\u4e2a YAML \u5bf9\u8c61\ncat <<EOF | kubectl apply -f -\napiVersion: v1\nkind: Pod\nmetadata:\n  name: busybox-sleep\nspec:\n  containers:\n  - name: busybox\n    image: busybox\n    args:\n    - sleep\n    - "1000000"\n---\napiVersion: v1\nkind: Pod\nmetadata:\n  name: busybox-sleep-less\nspec:\n  containers:\n  - name: busybox\n    image: busybox\n    args:\n    - sleep\n    - "1000"\nEOF\n\n# \u521b\u5efa\u6709\u591a\u4e2a key \u7684 Secret\ncat <<EOF | kubectl apply -f -\napiVersion: v1\nkind: Secret\nmetadata:\n  name: mysecret\ntype: Opaque\ndata:\n  password: $(echo -n "s33msi4" | base64 -w0)\n  username: $(echo -n "jane" | base64 -w0)\nEOF\n')),(0,a.kt)("h2",l({},{id:"\u67e5\u770b\u548c\u67e5\u627e\u8d44\u6e90"}),"\u67e5\u770b\u548c\u67e5\u627e\u8d44\u6e90"),(0,a.kt)("pre",null,(0,a.kt)("code",l({parentName:"pre"},{className:"language-bash"}),"# get \u547d\u4ee4\u7684\u57fa\u672c\u8f93\u51fa\nkubectl get services                          # \u5217\u51fa\u5f53\u524d\u547d\u540d\u7a7a\u95f4\u4e0b\u7684\u6240\u6709 services\nkubectl get pods --all-namespaces             # \u5217\u51fa\u6240\u6709\u547d\u540d\u7a7a\u95f4\u4e0b\u7684\u5168\u90e8\u7684 Pods\nkubectl get pods -o wide                      # \u5217\u51fa\u5f53\u524d\u547d\u540d\u7a7a\u95f4\u4e0b\u7684\u5168\u90e8 Pods\uff0c\u5e76\u663e\u793a\u66f4\u8be6\u7ec6\u7684\u4fe1\u606f\nkubectl get deployment my-dep                 # \u5217\u51fa\u67d0\u4e2a\u7279\u5b9a\u7684 Deployment\nkubectl get pods                              # \u5217\u51fa\u5f53\u524d\u547d\u540d\u7a7a\u95f4\u4e0b\u7684\u5168\u90e8 Pods\nkubectl get pod my-pod -o yaml                # \u83b7\u53d6\u4e00\u4e2a pod \u7684 YAML\n\n# describe \u547d\u4ee4\u7684\u8be6\u7ec6\u8f93\u51fa\nkubectl describe nodes my-node\nkubectl describe pods my-pod\n\n# \u5217\u51fa\u5f53\u524d\u540d\u5b57\u7a7a\u95f4\u4e0b\u6240\u6709 Services\uff0c\u6309\u540d\u79f0\u6392\u5e8f\nkubectl get services --sort-by=.metadata.name\n\n# \u5217\u51fa Pods\uff0c\u6309\u91cd\u542f\u6b21\u6570\u6392\u5e8f\nkubectl get pods --sort-by='.status.containerStatuses[0].restartCount'\n\n# \u5217\u4e3e\u6240\u6709 PV \u6301\u4e45\u5377\uff0c\u6309\u5bb9\u91cf\u6392\u5e8f\nkubectl get pv --sort-by=.spec.capacity.storage\n\n# \u83b7\u53d6\u5305\u542b app=cassandra \u6807\u7b7e\u7684\u6240\u6709 Pods \u7684 version \u6807\u7b7e\nkubectl get pods --selector=app=cassandra -o jsonpath='{.items[*].metadata.labels.version}'\n\n# \u68c0\u7d22\u5e26\u6709 \u201c.\u201d \u952e\u503c\uff0c\u4f8b\uff1a 'ca.crt'\nkubectl get configmap myconfig -o jsonpath='{.data.ca\\.crt}'\n\n# \u83b7\u53d6\u6240\u6709\u5de5\u4f5c\u8282\u70b9\uff08\u4f7f\u7528\u9009\u62e9\u5668\u4ee5\u6392\u9664\u6807\u7b7e\u540d\u79f0\u4e3a 'node-role.kubernetes.io/master' \u7684\u7ed3\u679c\uff09\nkubectl get node --selector='!node-role.kubernetes.io/master'\n\n# \u83b7\u53d6\u5f53\u524d\u547d\u540d\u7a7a\u95f4\u4e2d\u6b63\u5728\u8fd0\u884c\u7684 Pods\nkubectl get pods --field-selector=status.phase=Running\n\n# \u83b7\u53d6\u5168\u90e8\u8282\u70b9\u7684 ExternalIP \u5730\u5740\nkubectl get nodes -o jsonpath='{.items[*].status.addresses[?(@.type==\"ExternalIP\")].address}'\n\n# \u5217\u51fa\u5c5e\u4e8e\u67d0\u4e2a\u7279\u5b9a RC \u7684 Pods \u7684\u540d\u79f0\n# \u5728\u8f6c\u6362\u5bf9\u4e8e jsonpath \u8fc7\u4e8e\u590d\u6742\u7684\u573a\u5408\uff0c\"jq\" \u547d\u4ee4\u5f88\u6709\u7528\uff1b\u53ef\u4ee5\u5728 https://stedolan.github.io/jq/ \u627e\u5230\u5b83\u3002\nsel=${$(kubectl get rc my-rc --output=json | jq -j '.spec.selector | to_entries | .[] | \"\\(.key)=\\(.value),\"')%?}\necho $(kubectl get pods --selector=$sel --output=jsonpath={.items..metadata.name})\n\n# \u663e\u793a\u6240\u6709 Pods \u7684\u6807\u7b7e\uff08\u6216\u4efb\u4f55\u5176\u4ed6\u652f\u6301\u6807\u7b7e\u7684 Kubernetes \u5bf9\u8c61\uff09\nkubectl get pods --show-labels\n\n# \u68c0\u67e5\u54ea\u4e9b\u8282\u70b9\u5904\u4e8e\u5c31\u7eea\u72b6\u6001\nJSONPATH='{range .items[*]}{@.metadata.name}:{range @.status.conditions[*]}{@.type}={@.status};{end}{end}' && kubectl get nodes -o jsonpath=\"$JSONPATH\" | grep \"Ready=True\"\n\n# \u4e0d\u4f7f\u7528\u5916\u90e8\u5de5\u5177\u6765\u8f93\u51fa\u89e3\u7801\u540e\u7684 Secret\nkubectl get secret my-secret -o go-template='{{range $k,$v := .data}}{{\"### \"}}{{$k}}{{\"\\n\"}}{{$v|base64decode}}{{\"\\n\\n\"}}{{end}}'\n\n# \u5217\u51fa\u88ab\u4e00\u4e2a Pod \u4f7f\u7528\u7684\u5168\u90e8 Secret\nkubectl get pods -o json | jq '.items[].spec.containers[].env[]?.valueFrom.secretKeyRef.name' | grep -v null | sort | uniq\n\n# \u5217\u4e3e\u6240\u6709 Pods \u4e2d\u521d\u59cb\u5316\u5bb9\u5668\u7684\u5bb9\u5668 ID\uff08containerID\uff09\n# \u53ef\u7528\u4e8e\u5728\u6e05\u7406\u5df2\u505c\u6b62\u7684\u5bb9\u5668\u65f6\u907f\u514d\u5220\u9664\u521d\u59cb\u5316\u5bb9\u5668\nkubectl get pods --all-namespaces -o jsonpath='{range .items[*].status.initContainerStatuses[*]}{.containerID}{\"\\n\"}{end}' | cut -d/ -f3\n\n# \u5217\u51fa\u4e8b\u4ef6\uff08Events\uff09\uff0c\u6309\u65f6\u95f4\u6233\u6392\u5e8f\nkubectl get events --sort-by=.metadata.creationTimestamp\n\n# \u6bd4\u8f83\u5f53\u524d\u7684\u96c6\u7fa4\u72b6\u6001\u548c\u5047\u5b9a\u67d0\u6e05\u5355\u88ab\u5e94\u7528\u4e4b\u540e\u7684\u96c6\u7fa4\u72b6\u6001\nkubectl diff -f ./my-manifest.yaml\n\n# \u751f\u6210\u4e00\u4e2a\u53e5\u70b9\u5206\u9694\u7684\u6811\uff0c\u5176\u4e2d\u5305\u542b\u4e3a\u8282\u70b9\u8fd4\u56de\u7684\u6240\u6709\u952e\n# \u5728\u590d\u6742\u7684\u5d4c\u5957JSON\u7ed3\u6784\u4e2d\u5b9a\u4f4d\u952e\u65f6\u975e\u5e38\u6709\u7528\nkubectl get nodes -o json | jq -c 'path(..)|[.[]|tostring]|join(\".\")'\n\n# \u751f\u6210\u4e00\u4e2a\u53e5\u70b9\u5206\u9694\u7684\u6811\uff0c\u5176\u4e2d\u5305\u542b\u4e3apod\u7b49\u8fd4\u56de\u7684\u6240\u6709\u952e\nkubectl get pods -o json | jq -c 'path(..)|[.[]|tostring]|join(\".\")'\n\n# \u5047\u8bbe\u4f60\u7684 Pods \u6709\u9ed8\u8ba4\u7684\u5bb9\u5668\u548c\u9ed8\u8ba4\u7684\u540d\u5b57\u7a7a\u95f4\uff0c\u5e76\u4e14\u652f\u6301 'env' \u547d\u4ee4\uff0c\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u811a\u672c\u4e3a\u6240\u6709 Pods \u751f\u6210 ENV \u53d8\u91cf\u3002\n# \u8be5\u811a\u672c\u4e5f\u53ef\u7528\u4e8e\u5728\u6240\u6709\u7684 Pods \u91cc\u8fd0\u884c\u4efb\u4f55\u53d7\u652f\u6301\u7684\u547d\u4ee4\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f 'env'\u3002 \nfor pod in $(kubectl get po --output=jsonpath={.items..metadata.name}); do echo $pod && kubectl exec -it $pod env; done\n")),(0,a.kt)("h2",l({},{id:"\u66f4\u65b0\u8d44\u6e90"}),"\u66f4\u65b0\u8d44\u6e90"),(0,a.kt)("pre",null,(0,a.kt)("code",l({parentName:"pre"},{className:"language-bash"}),'kubectl set image deployment/frontend www=image:v2               # \u6eda\u52a8\u66f4\u65b0 "frontend" Deployment \u7684 "www" \u5bb9\u5668\u955c\u50cf\nkubectl rollout history deployment/frontend                      # \u68c0\u67e5 Deployment \u7684\u5386\u53f2\u8bb0\u5f55\uff0c\u5305\u62ec\u7248\u672c\nkubectl rollout undo deployment/frontend                         # \u56de\u6eda\u5230\u4e0a\u6b21\u90e8\u7f72\u7248\u672c\nkubectl rollout undo deployment/frontend --to-revision=2         # \u56de\u6eda\u5230\u7279\u5b9a\u90e8\u7f72\u7248\u672c\nkubectl rollout status -w deployment/frontend                    # \u76d1\u89c6 "frontend" Deployment \u7684\u6eda\u52a8\u5347\u7ea7\u72b6\u6001\u76f4\u5230\u5b8c\u6210\nkubectl rollout restart deployment/frontend                      # \u8f6e\u66ff\u91cd\u542f "frontend" Deployment\n\ncat pod.json | kubectl replace -f -                              # \u901a\u8fc7\u4f20\u5165\u5230\u6807\u51c6\u8f93\u5165\u7684 JSON \u6765\u66ff\u6362 Pod\n\n# \u5f3a\u5236\u66ff\u6362\uff0c\u5220\u9664\u540e\u91cd\u5efa\u8d44\u6e90\u3002\u4f1a\u5bfc\u81f4\u670d\u52a1\u4e0d\u53ef\u7528\u3002\nkubectl replace --force -f ./pod.json\n\n# \u4e3a\u591a\u526f\u672c\u7684 nginx \u521b\u5efa\u670d\u52a1\uff0c\u4f7f\u7528 80 \u7aef\u53e3\u63d0\u4f9b\u670d\u52a1\uff0c\u8fde\u63a5\u5230\u5bb9\u5668\u7684 8000 \u7aef\u53e3\u3002\nkubectl expose rc nginx --port=80 --target-port=8000\n\n# \u5c06\u67d0\u5355\u5bb9\u5668 Pod \u7684\u955c\u50cf\u7248\u672c\uff08\u6807\u7b7e\uff09\u66f4\u65b0\u5230 v4\nkubectl get pod mypod -o yaml | sed \'s/\\(image: myimage\\):.*$/\\1:v4/\' | kubectl replace -f -\n\nkubectl label pods my-pod new-label=awesome                      # \u6dfb\u52a0\u6807\u7b7e\nkubectl annotate pods my-pod icon-url=http://goo.gl/XXBTWq       # \u6dfb\u52a0\u6ce8\u89e3\nkubectl autoscale deployment foo --min=2 --max=10                # \u5bf9 "foo" Deployment \u81ea\u52a8\u4f38\u7f29\u5bb9\n')),(0,a.kt)("h2",l({},{id:"\u90e8\u5206\u66f4\u65b0\u8d44\u6e90"}),"\u90e8\u5206\u66f4\u65b0\u8d44\u6e90"),(0,a.kt)("pre",null,(0,a.kt)("code",l({parentName:"pre"},{className:"language-bash"}),'# \u90e8\u5206\u66f4\u65b0\u67d0\u8282\u70b9\nkubectl patch node k8s-node-1 -p \'{"spec":{"unschedulable":true}}\'\n\n# \u66f4\u65b0\u5bb9\u5668\u7684\u955c\u50cf\uff1bspec.containers[*].name \u662f\u5fc5\u987b\u7684\u3002\u56e0\u4e3a\u5b83\u662f\u4e00\u4e2a\u5408\u5e76\u6027\u8d28\u7684\u4e3b\u952e\u3002\nkubectl patch pod valid-pod -p \'{"spec":{"containers":[{"name":"kubernetes-serve-hostname","image":"new image"}]}}\'\n\n# \u4f7f\u7528\u5e26\u4f4d\u7f6e\u6570\u7ec4\u7684 JSON patch \u66f4\u65b0\u5bb9\u5668\u7684\u955c\u50cf\nkubectl patch pod valid-pod --type=\'json\' -p=\'[{"op": "replace", "path": "/spec/containers/0/image", "value":"new image"}]\'\n\n# \u4f7f\u7528\u5e26\u4f4d\u7f6e\u6570\u7ec4\u7684 JSON patch \u7981\u7528\u67d0 Deployment \u7684 livenessProbe\nkubectl patch deployment valid-deployment  --type json   -p=\'[{"op": "remove", "path": "/spec/template/spec/containers/0/livenessProbe"}]\'\n\n# \u5728\u5e26\u4f4d\u7f6e\u6570\u7ec4\u4e2d\u6dfb\u52a0\u5143\u7d20\nkubectl patch sa default --type=\'json\' -p=\'[{"op": "add", "path": "/secrets/1", "value": {"name": "whatever" } }]\'\n')),(0,a.kt)("h2",l({},{id:"\u7f16\u8f91\u8d44\u6e90"}),"\u7f16\u8f91\u8d44\u6e90"),(0,a.kt)("p",null,"\u4f7f\u7528\u4f60\u504f\u7231\u7684\u7f16\u8f91\u5668\u7f16\u8f91 API \u8d44\u6e90\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",l({parentName:"pre"},{className:"language-bash"}),'kubectl edit svc/docker-registry                      # \u7f16\u8f91\u540d\u4e3a docker-registry \u7684\u670d\u52a1\nKUBE_EDITOR="nano" kubectl edit svc/docker-registry   # \u4f7f\u7528\u5176\u4ed6\u7f16\u8f91\u5668\n')),(0,a.kt)("h2",l({},{id:"\u5bf9\u8d44\u6e90\u8fdb\u884c\u4f38\u7f29"}),"\u5bf9\u8d44\u6e90\u8fdb\u884c\u4f38\u7f29"),(0,a.kt)("pre",null,(0,a.kt)("code",l({parentName:"pre"},{className:"language-bash"}),"kubectl scale --replicas=3 rs/foo                                 # \u5c06\u540d\u4e3a 'foo' \u7684\u526f\u672c\u96c6\u4f38\u7f29\u5230 3 \u526f\u672c\nkubectl scale --replicas=3 -f foo.yaml                            # \u5c06\u5728 \"foo.yaml\" \u4e2d\u7684\u7279\u5b9a\u8d44\u6e90\u4f38\u7f29\u5230 3 \u4e2a\u526f\u672c\nkubectl scale --current-replicas=2 --replicas=3 deployment/mysql  # \u5982\u679c\u540d\u4e3a mysql \u7684 Deployment \u7684\u526f\u672c\u5f53\u524d\u662f 2\uff0c\u90a3\u4e48\u5c06\u5b83\u4f38\u7f29\u5230 3\nkubectl scale --replicas=5 rc/foo rc/bar rc/baz                   # \u4f38\u7f29\u591a\u4e2a\u526f\u672c\u63a7\u5236\u5668\n")),(0,a.kt)("h2",l({},{id:"\u5220\u9664\u8d44\u6e90"}),"\u5220\u9664\u8d44\u6e90"),(0,a.kt)("pre",null,(0,a.kt)("code",l({parentName:"pre"},{className:"language-bash"}),'kubectl delete -f ./pod.json                                              # \u5220\u9664\u5728 pod.json \u4e2d\u6307\u5b9a\u7684\u7c7b\u578b\u548c\u540d\u79f0\u7684 Pod\nkubectl delete pod,service baz foo                                        # \u5220\u9664\u540d\u79f0\u4e3a "baz" \u548c "foo" \u7684 Pod \u548c\u670d\u52a1\nkubectl delete pods,services -l name=myLabel                              # \u5220\u9664\u5305\u542b name=myLabel \u6807\u7b7e\u7684 pods \u548c\u670d\u52a1\nkubectl -n my-ns delete pod,svc --all                                     # \u5220\u9664\u5728 my-ns \u540d\u5b57\u7a7a\u95f4\u4e2d\u5168\u90e8\u7684 Pods \u548c\u670d\u52a1\n# \u5220\u9664\u6240\u6709\u4e0e pattern1 \u6216 pattern2 awk \u6a21\u5f0f\u5339\u914d\u7684 Pods\nkubectl get pods  -n mynamespace --no-headers=true | awk \'/pattern1|pattern2/{print $1}\' | xargs  kubectl delete -n mynamespace pod\n')),(0,a.kt)("h2",l({},{id:"\u4e0e\u8fd0\u884c\u4e2d\u7684-pods-\u8fdb\u884c\u4ea4\u4e92"}),"\u4e0e\u8fd0\u884c\u4e2d\u7684 Pods \u8fdb\u884c\u4ea4\u4e92"),(0,a.kt)("pre",null,(0,a.kt)("code",l({parentName:"pre"},{className:"language-bash"}),"kubectl logs my-pod                                                  # \u83b7\u53d6 pod \u65e5\u5fd7\uff08\u6807\u51c6\u8f93\u51fa\uff09\nkubectl logs -l name=myLabel                                         # \u83b7\u53d6\u542b name=myLabel \u6807\u7b7e\u7684 Pods \u7684\u65e5\u5fd7\uff08\u6807\u51c6\u8f93\u51fa\uff09\nkubectl logs my-pod --previous                                       # \u83b7\u53d6\u4e0a\u4e2a\u5bb9\u5668\u5b9e\u4f8b\u7684 pod \u65e5\u5fd7\uff08\u6807\u51c6\u8f93\u51fa\uff09\nkubectl logs my-pod -c my-container                                  # \u83b7\u53d6 Pod \u5bb9\u5668\u7684\u65e5\u5fd7\uff08\u6807\u51c6\u8f93\u51fa, \u591a\u5bb9\u5668\u573a\u666f\uff09\nkubectl logs -l name=myLabel -c my-container                         # \u83b7\u53d6\u542b name=myLabel \u6807\u7b7e\u7684 Pod \u5bb9\u5668\u65e5\u5fd7\uff08\u6807\u51c6\u8f93\u51fa, \u591a\u5bb9\u5668\u573a\u666f\uff09\nkubectl logs my-pod -c my-container --previous                       # \u83b7\u53d6 Pod \u4e2d\u67d0\u5bb9\u5668\u7684\u4e0a\u4e2a\u5b9e\u4f8b\u7684\u65e5\u5fd7\uff08\u6807\u51c6\u8f93\u51fa, \u591a\u5bb9\u5668\u573a\u666f\uff09\nkubectl logs -f my-pod                                               # \u6d41\u5f0f\u8f93\u51fa Pod \u7684\u65e5\u5fd7\uff08\u6807\u51c6\u8f93\u51fa\uff09\nkubectl logs -f my-pod -c my-container                               # \u6d41\u5f0f\u8f93\u51fa Pod \u5bb9\u5668\u7684\u65e5\u5fd7\uff08\u6807\u51c6\u8f93\u51fa, \u591a\u5bb9\u5668\u573a\u666f\uff09\nkubectl logs -f -l name=myLabel --all-containers                     # \u6d41\u5f0f\u8f93\u51fa\u542b name=myLabel \u6807\u7b7e\u7684 Pod \u7684\u6240\u6709\u65e5\u5fd7\uff08\u6807\u51c6\u8f93\u51fa\uff09\nkubectl run -i --tty busybox --image=busybox -- sh                   # \u4ee5\u4ea4\u4e92\u5f0f Shell \u8fd0\u884c Pod\nkubectl run nginx --image=nginx -n mynamespace                       # \u5728\u6307\u5b9a\u540d\u5b57\u7a7a\u95f4\u4e2d\u8fd0\u884c nginx Pod\nkubectl run nginx --image=nginx --dry-run=client -o yaml > pod.yaml  # \u8fd0\u884c ngins Pod \u5e76\u5c06\u5176\u89c4\u7ea6\u5199\u5165\u5230\u540d\u4e3a pod.yaml \u7684\u6587\u4ef6\n  \n\nkubectl attach my-pod -i                            # \u6302\u63a5\u5230\u4e00\u4e2a\u8fd0\u884c\u7684\u5bb9\u5668\u4e2d\nkubectl port-forward my-pod 5000:6000               # \u5728\u672c\u5730\u8ba1\u7b97\u673a\u4e0a\u4fa6\u542c\u7aef\u53e3 5000 \u5e76\u8f6c\u53d1\u5230 my-pod \u4e0a\u7684\u7aef\u53e3 6000\nkubectl exec my-pod -- ls /                         # \u5728\u5df2\u6709\u7684 Pod \u4e2d\u8fd0\u884c\u547d\u4ee4\uff08\u5355\u5bb9\u5668\u573a\u666f\uff09\nkubectl exec --stdin --tty my-pod -- /bin/sh        # \u4f7f\u7528\u4ea4\u4e92 shell \u8bbf\u95ee\u6b63\u5728\u8fd0\u884c\u7684 Pod (\u4e00\u4e2a\u5bb9\u5668\u573a\u666f)\nkubectl exec my-pod -c my-container -- ls /         # \u5728\u5df2\u6709\u7684 Pod \u4e2d\u8fd0\u884c\u547d\u4ee4\uff08\u591a\u5bb9\u5668\u573a\u666f\uff09\nkubectl top pod POD_NAME --containers               # \u663e\u793a\u7ed9\u5b9a Pod \u548c\u5176\u4e2d\u5bb9\u5668\u7684\u76d1\u63a7\u6570\u636e\nkubectl top pod POD_NAME --sort-by=cpu              # \u663e\u793a\u7ed9\u5b9a Pod \u7684\u6307\u6807\u5e76\u4e14\u6309\u7167 'cpu' \u6216\u8005 'memory' \u6392\u5e8f\n")),(0,a.kt)("h2",l({},{id:"\u4e0e-deployments-\u548c-services-\u8fdb\u884c\u4ea4\u4e92"}),"\u4e0e Deployments \u548c Services \u8fdb\u884c\u4ea4\u4e92"),(0,a.kt)("pre",null,(0,a.kt)("code",l({parentName:"pre"},{className:"language-bash"}),"kubectl logs deploy/my-deployment                         # \u83b7\u53d6\u4e00\u4e2a Deployment \u7684 Pod \u7684\u65e5\u5fd7\uff08\u5355\u5bb9\u5668\u4f8b\u5b50\uff09\nkubectl logs deploy/my-deployment -c my-container         # \u83b7\u53d6\u4e00\u4e2a Deployment \u7684 Pod \u7684\u65e5\u5fd7\uff08\u591a\u5bb9\u5668\u4f8b\u5b50\uff09\n\nkubectl port-forward svc/my-service 5000                  # \u4fa6\u542c\u672c\u5730\u7aef\u53e3 5000 \u5e76\u8f6c\u53d1\u5230 Service \u540e\u7aef\u7aef\u53e3 5000\nkubectl port-forward svc/my-service 5000:my-service-port  # \u4fa6\u542c\u672c\u5730\u7aef\u53e3 5000 \u5e76\u8f6c\u53d1\u5230\u540d\u5b57\u4e3a <my-service-port> \u7684 Service \u76ee\u6807\u7aef\u53e3\n\nkubectl port-forward deploy/my-deployment 5000:6000       # \u4fa6\u542c\u672c\u5730\u7aef\u53e3 5000 \u5e76\u8f6c\u53d1\u5230 <my-deployment> \u521b\u5efa\u7684 Pod \u91cc\u7684\u7aef\u53e3 6000\nkubectl exec deploy/my-deployment -- ls                   # \u5728 Deployment \u91cc\u7684\u7b2c\u4e00\u4e2a Pod \u7684\u7b2c\u4e00\u4e2a\u5bb9\u5668\u91cc\u8fd0\u884c\u547d\u4ee4\uff08\u5355\u5bb9\u5668\u548c\u591a\u5bb9\u5668\u4f8b\u5b50\uff09\n")),(0,a.kt)("h2",l({},{id:"\u4e0e\u8282\u70b9\u548c\u96c6\u7fa4\u8fdb\u884c\u4ea4\u4e92"}),"\u4e0e\u8282\u70b9\u548c\u96c6\u7fa4\u8fdb\u884c\u4ea4\u4e92"),(0,a.kt)("pre",null,(0,a.kt)("code",l({parentName:"pre"},{className:"language-bash"}),"kubectl cordon my-node                                                # \u6807\u8bb0 my-node \u8282\u70b9\u4e3a\u4e0d\u53ef\u8c03\u5ea6\nkubectl drain my-node                                                 # \u5bf9 my-node \u8282\u70b9\u8fdb\u884c\u6e05\u7a7a\u64cd\u4f5c\uff0c\u4e3a\u8282\u70b9\u7ef4\u62a4\u505a\u51c6\u5907\nkubectl uncordon my-node                                              # \u6807\u8bb0 my-node \u8282\u70b9\u4e3a\u53ef\u4ee5\u8c03\u5ea6\nkubectl top node my-node                                              # \u663e\u793a\u7ed9\u5b9a\u8282\u70b9\u7684\u5ea6\u91cf\u503c\nkubectl cluster-info                                                  # \u663e\u793a\u4e3b\u63a7\u8282\u70b9\u548c\u670d\u52a1\u7684\u5730\u5740\nkubectl cluster-info dump                                             # \u5c06\u5f53\u524d\u96c6\u7fa4\u72b6\u6001\u8f6c\u50a8\u5230\u6807\u51c6\u8f93\u51fa\nkubectl cluster-info dump --output-directory=/path/to/cluster-state   # \u5c06\u5f53\u524d\u96c6\u7fa4\u72b6\u6001\u8f93\u51fa\u5230 /path/to/cluster-state\n\n# \u5982\u679c\u5df2\u5b58\u5728\u5177\u6709\u6307\u5b9a\u952e\u548c\u6548\u679c\u7684\u6c61\u70b9\uff0c\u5219\u66ff\u6362\u5176\u503c\u4e3a\u6307\u5b9a\u503c\u3002\nkubectl taint nodes foo dedicated=special-user:NoSchedule\n")),(0,a.kt)("h3",l({},{id:"\u8d44\u6e90\u7c7b\u578b"}),"\u8d44\u6e90\u7c7b\u578b"),(0,a.kt)("p",null,"\u5217\u51fa\u6240\u652f\u6301\u7684\u5168\u90e8\u8d44\u6e90\u7c7b\u578b\u548c\u5b83\u4eec\u7684\u7b80\u79f0\u3001",(0,a.kt)("a",l({parentName:"p"},{href:"https://kubernetes.io/zh-cn/docs/concepts/overview/kubernetes-api/#api-groups-and-versioning"}),"API \u7ec4"),", \u662f\u5426\u662f",(0,a.kt)("a",l({parentName:"p"},{href:"https://kubernetes.io/zh-cn/docs/concepts/overview/working-with-objects/namespaces/"}),"\u540d\u5b57\u7a7a\u95f4\u4f5c\u7528\u57df")," \u548c ",(0,a.kt)("a",l({parentName:"p"},{href:"https://kubernetes.io/zh-cn/docs/concepts/overview/working-with-objects/kubernetes-objects/"}),"Kind"),"\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",l({parentName:"pre"},{className:"language-bash"}),"kubectl api-resources\n")),(0,a.kt)("p",null,"\u7528\u4e8e\u63a2\u7d22 API \u8d44\u6e90\u7684\u5176\u4ed6\u64cd\u4f5c\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",l({parentName:"pre"},{className:"language-bash"}),'kubectl api-resources --namespaced=true      # \u6240\u6709\u547d\u540d\u7a7a\u95f4\u4f5c\u7528\u57df\u7684\u8d44\u6e90\nkubectl api-resources --namespaced=false     # \u6240\u6709\u975e\u547d\u540d\u7a7a\u95f4\u4f5c\u7528\u57df\u7684\u8d44\u6e90\nkubectl api-resources -o name                # \u7528\u7b80\u5355\u683c\u5f0f\u5217\u4e3e\u6240\u6709\u8d44\u6e90\uff08\u4ec5\u663e\u793a\u8d44\u6e90\u540d\u79f0\uff09\nkubectl api-resources -o wide                # \u7528\u6269\u5c55\u683c\u5f0f\u5217\u4e3e\u6240\u6709\u8d44\u6e90\uff08\u53c8\u79f0 "wide" \u683c\u5f0f\uff09\nkubectl api-resources --verbs=list,get       # \u652f\u6301 "list" \u548c "get" \u8bf7\u6c42\u52a8\u8bcd\u7684\u6240\u6709\u8d44\u6e90\nkubectl api-resources --api-group=extensions # "extensions" API \u7ec4\u4e2d\u7684\u6240\u6709\u8d44\u6e90\n')),(0,a.kt)("h3",l({},{id:"\u683c\u5f0f\u5316\u8f93\u51fa"}),"\u683c\u5f0f\u5316\u8f93\u51fa"),(0,a.kt)("p",null,"\u8981\u4ee5\u7279\u5b9a\u683c\u5f0f\u5c06\u8be6\u7ec6\u4fe1\u606f\u8f93\u51fa\u5230\u7ec8\u7aef\u7a97\u53e3\uff0c\u5c06 ",(0,a.kt)("inlineCode",{parentName:"p"},"-o"),"\uff08\u6216\u8005 ",(0,a.kt)("inlineCode",{parentName:"p"},"--output"),"\uff09\u53c2\u6570\u6dfb\u52a0\u5230\u652f\u6301\u7684 ",(0,a.kt)("inlineCode",{parentName:"p"},"kubectl")," \u547d\u4ee4\u4e2d\u3002"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",l({parentName:"tr"},{align:null}),"\u8f93\u51fa\u683c\u5f0f"),(0,a.kt)("th",l({parentName:"tr"},{align:null}),"\u63cf\u8ff0"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",l({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"-o=custom-columns=<spec>")),(0,a.kt)("td",l({parentName:"tr"},{align:null}),"\u4f7f\u7528\u9017\u53f7\u5206\u9694\u7684\u81ea\u5b9a\u4e49\u5217\u6765\u6253\u5370\u8868\u683c")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",l({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"-o=custom-columns-file=<filename>")),(0,a.kt)("td",l({parentName:"tr"},{align:null}),"\u4f7f\u7528 ",(0,a.kt)("inlineCode",{parentName:"td"},"<filename>")," \u6587\u4ef6\u4e2d\u7684\u81ea\u5b9a\u4e49\u5217\u6a21\u677f\u6253\u5370\u8868\u683c")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",l({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"-o=json")),(0,a.kt)("td",l({parentName:"tr"},{align:null}),"\u8f93\u51fa JSON \u683c\u5f0f\u7684 API \u5bf9\u8c61")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",l({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"-o=jsonpath=<template>")),(0,a.kt)("td",l({parentName:"tr"},{align:null}),"\u6253\u5370 ",(0,a.kt)("a",l({parentName:"td"},{href:"https://kubernetes.io/zh-cn/docs/reference/kubectl/jsonpath/"}),"jsonpath")," \u8868\u8fbe\u5f0f\u4e2d\u5b9a\u4e49\u7684\u5b57\u6bb5")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",l({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"-o=jsonpath-file=<filename>")),(0,a.kt)("td",l({parentName:"tr"},{align:null}),"\u6253\u5370\u5728 ",(0,a.kt)("inlineCode",{parentName:"td"},"<filename>")," \u6587\u4ef6\u4e2d\u5b9a\u4e49\u7684 ",(0,a.kt)("a",l({parentName:"td"},{href:"https://kubernetes.io/zh-cn/docs/reference/kubectl/jsonpath/"}),"jsonpath")," \u8868\u8fbe\u5f0f\u6240\u6307\u5b9a\u7684\u5b57\u6bb5\u3002")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",l({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"-o=name")),(0,a.kt)("td",l({parentName:"tr"},{align:null}),"\u4ec5\u6253\u5370\u8d44\u6e90\u540d\u79f0\u800c\u4e0d\u6253\u5370\u5176\u4ed6\u5185\u5bb9")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",l({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"-o=wide")),(0,a.kt)("td",l({parentName:"tr"},{align:null}),"\u4ee5\u7eaf\u6587\u672c\u683c\u5f0f\u8f93\u51fa\u989d\u5916\u4fe1\u606f\uff0c\u5bf9\u4e8e Pod \u6765\u8bf4\uff0c\u8f93\u51fa\u4e2d\u5305\u542b\u4e86\u8282\u70b9\u540d\u79f0")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",l({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"-o=yaml")),(0,a.kt)("td",l({parentName:"tr"},{align:null}),"\u8f93\u51fa YAML \u683c\u5f0f\u7684 API \u5bf9\u8c61")))),(0,a.kt)("p",null,"\u4f7f\u7528 ",(0,a.kt)("inlineCode",{parentName:"p"},"-o=custom-columns")," \u7684\u793a\u4f8b\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",l({parentName:"pre"},{className:"language-bash"}),"# \u96c6\u7fa4\u4e2d\u8fd0\u884c\u7740\u7684\u6240\u6709\u955c\u50cf\nkubectl get pods -A -o=custom-columns='DATA:spec.containers[*].image'\n\n# \u5217\u4e3e default \u540d\u5b57\u7a7a\u95f4\u4e2d\u8fd0\u884c\u7684\u6240\u6709\u955c\u50cf\uff0c\u6309 Pod \u5206\u7ec4\nkubectl get pods --namespace default --output=custom-columns=\"NAME:.metadata.name,IMAGE:.spec.containers[*].image\"\n\n# \u9664 \"k8s.gcr.io/coredns:1.6.2\" \u4e4b\u5916\u7684\u6240\u6709\u955c\u50cf\nkubectl get pods -A -o=custom-columns='DATA:spec.containers[?(@.image!=\"k8s.gcr.io/coredns:1.6.2\")].image'\n\n# \u8f93\u51fa metadata \u4e0b\u9762\u7684\u6240\u6709\u5b57\u6bb5\uff0c\u65e0\u8bba Pod \u540d\u5b57\u4e3a\u4f55\nkubectl get pods -A -o=custom-columns='DATA:metadata.*'\n")),(0,a.kt)("p",null,"\u6709\u5173\u66f4\u591a\u793a\u4f8b\uff0c\u8bf7\u53c2\u770b kubectl ",(0,a.kt)("a",l({parentName:"p"},{href:"https://kubernetes.io/zh-cn/docs/reference/kubectl/#custom-columns"}),"\u53c2\u8003\u6587\u6863"),"\u3002"),(0,a.kt)("h3",l({},{id:"kubectl-\u65e5\u5fd7\u8f93\u51fa\u8be6\u7ec6\u7a0b\u5ea6\u548c\u8c03\u8bd5"}),"Kubectl \u65e5\u5fd7\u8f93\u51fa\u8be6\u7ec6\u7a0b\u5ea6\u548c\u8c03\u8bd5"),(0,a.kt)("p",null,"Kubectl \u65e5\u5fd7\u8f93\u51fa\u8be6\u7ec6\u7a0b\u5ea6\u662f\u901a\u8fc7 ",(0,a.kt)("inlineCode",{parentName:"p"},"-v")," \u6216\u8005 ",(0,a.kt)("inlineCode",{parentName:"p"},"--v")," \u6765\u63a7\u5236\u7684\uff0c\u53c2\u6570\u540e\u8ddf\u4e00\u4e2a\u6570\u5b57\u8868\u793a\u65e5\u5fd7\u7684\u7ea7\u522b\u3002\nKubernetes \u901a\u7528\u7684\u65e5\u5fd7\u4e60\u60ef\u548c\u76f8\u5173\u7684\u65e5\u5fd7\u7ea7\u522b\u5728\n",(0,a.kt)("a",l({parentName:"p"},{href:"https://github.com/kubernetes/community/blob/master/contributors/devel/sig-instrumentation/logging.md"}),"\u8fd9\u91cc")," \u6709\u76f8\u5e94\u7684\u63cf\u8ff0\u3002"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",l({parentName:"tr"},{align:null}),"\u8be6\u7ec6\u7a0b\u5ea6"),(0,a.kt)("th",l({parentName:"tr"},{align:null}),"\u63cf\u8ff0"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",l({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"--v=0")),(0,a.kt)("td",l({parentName:"tr"},{align:null}),"\u7528\u4e8e\u90a3\u4e9b\u5e94\u8be5 ",(0,a.kt)("em",{parentName:"td"},"\u59cb\u7ec8")," \u5bf9\u8fd0\u7ef4\u4eba\u5458\u53ef\u89c1\u7684\u4fe1\u606f\uff0c\u56e0\u4e3a\u8fd9\u4e9b\u4fe1\u606f\u4e00\u822c\u5f88\u6709\u7528\u3002")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",l({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"--v=1")),(0,a.kt)("td",l({parentName:"tr"},{align:null}),"\u5982\u679c\u60a8\u4e0d\u60f3\u8981\u770b\u5230\u5197\u4f59\u4fe1\u606f\uff0c\u6b64\u503c\u662f\u4e00\u4e2a\u5408\u7406\u7684\u9ed8\u8ba4\u65e5\u5fd7\u7ea7\u522b\u3002")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",l({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"--v=2")),(0,a.kt)("td",l({parentName:"tr"},{align:null}),"\u8f93\u51fa\u6709\u5173\u670d\u52a1\u7684\u7a33\u5b9a\u72b6\u6001\u7684\u4fe1\u606f\u4ee5\u53ca\u91cd\u8981\u7684\u65e5\u5fd7\u6d88\u606f\uff0c\u8fd9\u4e9b\u4fe1\u606f\u53ef\u80fd\u4e0e\u7cfb\u7edf\u4e2d\u7684\u91cd\u5927\u53d8\u5316\u6709\u5173\u3002\u8fd9\u662f\u5efa\u8bae\u5927\u591a\u6570\u7cfb\u7edf\u8bbe\u7f6e\u7684\u9ed8\u8ba4\u65e5\u5fd7\u7ea7\u522b\u3002")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",l({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"--v=3")),(0,a.kt)("td",l({parentName:"tr"},{align:null}),"\u5305\u542b\u6709\u5173\u7cfb\u7edf\u72b6\u6001\u53d8\u5316\u7684\u6269\u5c55\u4fe1\u606f\u3002")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",l({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"--v=4")),(0,a.kt)("td",l({parentName:"tr"},{align:null}),"\u5305\u542b\u8c03\u8bd5\u7ea7\u522b\u7684\u5197\u4f59\u4fe1\u606f\u3002")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",l({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"--v=5")),(0,a.kt)("td",l({parentName:"tr"},{align:null}),"\u8ddf\u8e2a\u7ea7\u522b\u7684\u8be6\u7ec6\u7a0b\u5ea6\u3002")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",l({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"--v=6")),(0,a.kt)("td",l({parentName:"tr"},{align:null}),"\u663e\u793a\u6240\u8bf7\u6c42\u7684\u8d44\u6e90\u3002")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",l({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"--v=7")),(0,a.kt)("td",l({parentName:"tr"},{align:null}),"\u663e\u793a HTTP \u8bf7\u6c42\u5934\u3002")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",l({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"--v=8")),(0,a.kt)("td",l({parentName:"tr"},{align:null}),"\u663e\u793a HTTP \u8bf7\u6c42\u5185\u5bb9\u3002")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",l({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"--v=9")),(0,a.kt)("td",l({parentName:"tr"},{align:null}),"\u663e\u793a HTTP \u8bf7\u6c42\u5185\u5bb9\u800c\u4e14\u4e0d\u622a\u65ad\u5185\u5bb9\u3002")))))}m.isMDXComponent=!0}}]);