"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[1477],{10:e=>{e.exports=JSON.parse('{"blogPosts":[{"id":"/2023/01/12/redia-ha","metadata":{"permalink":"/blog/2023/01/12/redia-ha","source":"@site/blog/2023-01-12-redia-ha.md","title":"redia-ha","description":"Redis can be accessed via port 6379 and Sentinel can be accessed via port 26379 on the following DNS name from within your cluster:","date":"2023-01-12T00:00:00.000Z","formattedDate":"2023\u5e741\u670812\u65e5","tags":[{"label":"k8s","permalink":"/blog/tags/k-8-s"},{"label":"redis","permalink":"/blog/tags/redis"}],"readingTime":1.47,"hasTruncateMarker":false,"authors":[{"name":"Vinloong","title":"one dev","url":"https://lingwenlong.com","imageURL":"https://raw.githubusercontent.com/vinloong/imgchr/main/notes/2022/12/30/10-02-00-ae0172.png","key":"loong"}],"frontMatter":{"title":"redia-ha","authors":"loong","tags":["k8s","redis"]},"nextItem":{"title":"sealos start && ceph clean","permalink":"/blog/sealos ceph"}},"content":"```bash\\nredis-ha-haproxy.redis-ha.svc\\nredis-sentinel.redis-ha.svc\\nredis-cluster.redis-ha.svc\\n```\\n\\n```bash\\nhelm fetch bitnami/redis --untar [--untardir ./]\\nhelm install redis-sentinel . -n redis-ha\\n```\\nRedis can be accessed via port 6379 and Sentinel can be accessed via port 26379 on the following DNS name from within your cluster:\\n`redis-ha.redis-ha.svc.cluster.local`\\n\\nTo connect to your Redis server:\\n1. To retrieve the redis password:\\n```bash\\n   echo $(kubectl get secret redis-ha -o \\"jsonpath={.data[\'auth\']}\\" | base64 --decode)\\n```\\n2. Connect to the Redis master pod that you can use as a client. By default the redis-ha-server-0 pod is configured as the master:\\n```bash\\n   kubectl exec -it redis-ha-server-0 sh -n redis-ha\\n```\\n\\n3. Connect using the Redis CLI (inside container):\\n```bash\\n   redis-cli -a <REDIS-PASS-FROM-SECRET>\\n```\\n\\n\\n\\n\\n** Please be patient while the chart is being deployed **\\n\\nRedis&reg; can be accessed via port 6379 on the following DNS name from within your cluster:\\n\\n    `redis-sentinel.redis-ha.svc.cluster.local` for read only operations\\n\\nFor read/write operations, first access the Redis&reg; Sentinel cluster, which is available in port 26379 using the same domain name above.\\n\\n\\n\\nTo get your password run:\\n\\n```bash\\n    export REDIS_PASSWORD=$(kubectl get secret --namespace redis-ha redis-ha-passwd -o jsonpath=\\"{.data.redis-password}\\" | base64 -d)\\n```\\n\\nTo connect to your Redis&reg; server:\\n\\n1. Run a Redis&reg; pod that you can use as a client:\\n\\n```bash\\n   kubectl run --namespace redis-ha redis-client --restart=\'Never\'  --env REDIS_PASSWORD=$REDIS_PASSWORD  --image docker.io/bitnami/redis:7.0.7-debian-11-r9 --command -- sleep infinity\\n\\n   Use the following command to attach to the pod:\\n\\n   kubectl exec --tty -i redis-client \\\\\\n   --namespace redis-ha -- bash\\n```\\n\\n2. Connect using the Redis&reg; CLI:\\n\\n```bash\\n   REDISCLI_AUTH=\\"$REDIS_PASSWORD\\" redis-cli -h redis-sentinel -p 6379 # Read only operations\\n   REDISCLI_AUTH=\\"$REDIS_PASSWORD\\" redis-cli -h redis-sentinel -p 26379 # Sentinel access\\n```\\n\\nTo connect to your database from outside the cluster execute the following commands:\\n\\n```bash\\n    kubectl port-forward --namespace redis-ha svc/redis-sentinel 6379:6379 &\\n    REDISCLI_AUTH=\\"$REDIS_PASSWORD\\" redis-cli -h 127.0.0.1 -p 6379\\n```"},{"id":"sealos ceph","metadata":{"permalink":"/blog/sealos ceph","source":"@site/blog/2022-12-27-sealos-ceph.md","title":"sealos start && ceph clean","description":"","date":"2022-12-27T00:00:00.000Z","formattedDate":"2022\u5e7412\u670827\u65e5","tags":[{"label":"sealos","permalink":"/blog/tags/sealos"},{"label":"k8s","permalink":"/blog/tags/k-8-s"},{"label":"ceph","permalink":"/blog/tags/ceph"}],"readingTime":1.455,"hasTruncateMarker":false,"authors":[{"name":"Vinloong","title":"one dev","url":"https://lingwenlong.com","imageURL":"https://raw.githubusercontent.com/vinloong/imgchr/main/notes/2022/12/30/10-02-00-ae0172.png","key":"loong"}],"frontMatter":{"slug":"sealos ceph","title":"sealos start && ceph clean","authors":"loong","tags":["sealos","k8s","ceph"]},"prevItem":{"title":"redia-ha","permalink":"/blog/2023/01/12/redia-ha"}},"content":"```bash\\nwget https://github.91chi.fun/https://github.com/labring/sealos/releases/download/v4.1.3/sealos_4.1.3_linux_amd64.tar.gz\\ntar -zxvf sealos_4.1.3_linux_amd64.tar.gz sealos\\nchmod +x sealos\\nmv sealos /usr/bin\\nsealos version\\nsealos apply -f Clusterfile\\n\\nsealos reset --cluster fs-cloud  --masters 10.8.40.125,10.8.40.126,10.8.40.129 --nodes 10.8.40.134,10.8.40.133,10.8.40.128,10.8.40.124 -p Freesun_123\\n\\nsealos --cluster fs-cloud add --nodes 10.8.40.124\\n\\n\\n```\\n\\n\\n```bash\\nmkdir -p $HOME/.kube\\nsudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config\\nsudo chown $(id -u):$(id -g) $HOME/.kube/config\\n```\\n\\n\\n```bash\\nkubectl exec -it -n rook-ceph rook-ceph-tools-5679b7d8f-8fpqj -- bash\\n$ ceph status\\n  cluster:\\n    id:     b3282dee-82f6-4e2f-b89e-48c01077662b\\n    health: HEALTH_OK\\n \\n  services:\\n    mon: 3 daemons, quorum a,b,d (age 31s)\\n    mgr: b(active, since 76s), standbys: a\\n    osd: 3 osds: 3 up (since 76s), 3 in (since 103s)\\n \\n  data:\\n    pools:   1 pools, 1 pgs\\n    objects: 2 objects, 577 KiB\\n    usage:   67 MiB used, 3.3 TiB / 3.3 TiB avail\\n    pgs:     1 active+clean\\n\\n\\n$ ceph osd status\\nID  HOST      USED  AVAIL  WR OPS  WR DATA  RD OPS  RD DATA  STATE      \\n 0  node-01  22.1M  1117G      0        0       0        0   exists,up  \\n 1  node-03  22.2M  1117G      0        0       0        0   exists,up  \\n 2  node-02  22.1M  1117G      0        0       0        0   exists,up\\n\\n\\n$ ceph osd pool ls detail\\npool 1 \'.mgr\' replicated size 3 min_size 2 crush_rule 0 object_hash rjenkins pg_num 1 pgp_num 1 autoscale_mode on last_change 18 flags hashpspool stripe_width 0 pg_num_max 32 pg_num_min 1 application mgr\\n\\n\\n$ rados df\\nPOOL_NAME     USED  OBJECTS  CLONES  COPIES  MISSING_ON_PRIMARY  UNFOUND  DEGRADED  RD_OPS       RD  WR_OPS       WR  USED COMPR  UNDER COMPR\\n.mgr       1.7 MiB        2       0       6                   0        0         0     126  109 KiB     181  2.9 MiB         0 B          0 B\\n\\ntotal_objects    2\\ntotal_used       67 MiB\\ntotal_avail      3.3 TiB\\ntotal_space      3.3 TiB\\n\\n\\n\\n\\n\u91cd\u65b0\u5b89\u88c5 rook-ceph \u91cd\u7f6e\u78c1\u76d8\u72b6\u6001\\n\\nDISK=\\"/dev/sdX\\"\\n\\nsgdisk --zap-all $DISK\\n\\ndd if=/dev/zero of=\\"$DISK\\" bs=1M count=100 oflag=direct,dsync\\n\\n# \u5982\u679c\u662f\u56fa\u6001\u76d8\u4f7f\u7528\u4e0b\u9762\u547d\u4ee4 \u66ff\u6362\u4e0a\u9762 `dd` \u547d\u4ee4\\nblkdiscard $DISK\\n\\n```"}]}')}}]);